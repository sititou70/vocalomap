{"version":3,"sources":["components/graph/forceSimulation.ts","styles/theme.ts","components/graph/Node.tsx","components/graph/Link.tsx","components/graph/Graph.tsx","components/graph/FilterNumSlider.tsx","components/graph/MakeCouplingCheckbox.tsx","components/pixiv-utils.tsx","components/FriendsInfo.tsx","components/graph/FriendsDialog.tsx","components/graph/index.tsx","styles/GlobalStyle.ts","components/Menu.tsx","components/CouplingRanking.tsx","components/App.tsx","serviceWorker.js","index.js"],"names":["makeSigmoid","require","default","getInitializedForce","nodes","links","options","nums","map","x","num","sigmoid","center","stats","mean","deviation","stdev","deviation_output","force_simulation","d3","force","strength","distanceMax","distance","d","link_distance","length","iterations","window_size","width","y","height","graph","registerGraph","svg","on","call","selection","selectAll","classname","node","attr","undefined","link","source","target","makePxScaleUtil","base","scale","base_color","process","REACT_APP_BASE_COLOR","main_color","accent_color","export_obj","colors","main","accent","border","text","px","grid","font_size","max_width","StyledRoot","styled","g","props","active","theme","Node","data","onFocusName","onClick","root_element","useRef","useEffect","current","root","datum","_","alphaTarget","restart","fx","fy","event","className","onMouseEnter","name","onMouseLeave","ref","r","replace","StyledPath","path","weight","mixColor","StyledLabel","Link","detail","line","id","href","startOffset","GraphRoot","Graph","onNodeClick","useWindowSize","useMemo","graph_position","root_group","subject","style","transform","useState","focus_name","setFocusName","friends","source_name","target_name","filter","reduce","s","link_components","node_components","indexOf","SliderRoot","div","FilterNumSlider","default_value","step","min","max","onChange","Slider","defaultValue","valueLabelDisplay","ValueLabelComponent","children","open","value","Tooltip","enterTouchDelay","placement","title","valueLabelFormat","onChangeCommitted","v","marks","CheckboxRoot","MakeCouplingCheckbox","checked","FormControlLabel","control","Checkbox","e","label","PixivDictLink","rel","PixivTagLink","couplings","coupling_json","characters","i","self","find","z","FriendsInfo","tags","sort","friend","dict_entry","couplings_json","couplings_json_import","name2character","Map","forEach","set","StyledFriendsInfo","DialogRoot","Dialog","FriendsDialog","onClose","character","get","fullWidth","DialogTitle","deepCopy","num_stats","parseInt","getNodesAndLinksFromLinks","base_links","node_name2id","getNodesAndLinks","all_links","tag","num_filter","initGetNodesAndLinks","default_filter_num","Math","floor","filter_num","setFilterNum","node_and_links","_setNodesAndLinks","resolve_one_to_many","setResolveOneToMany","setNodesAndLinks","useCallback","nodes_and_links","charactors","Set","sorted_links","resolved_links","has","push","delete","new_nodes_and_links","Array","from","makeCoupling","dialog_name","setDialogName","dialog_open","setDialogOpen","typographyTheme","Typography","injectStyles","global_style","css","Root","Menu","display","variant","Date","toISOString","coupling_json_import","CouplingListItem","coupling","rank","StyledListItem","li","CouplingRanking","coupling_tags","App","ReactGA","initialize","pageview","window","location","pathname","search","styles","Boolean","hostname","match","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.e8fb9a27.chunk.js","sourcesContent":["import * as d3 from 'd3';\nimport { SimulationNodeDatum } from 'd3';\nimport { NodeData, LinkData, ForceSimulation, ElementSelection } from './types';\nimport stats from 'stats-lite';\nconst makeSigmoid = require('awesome-sigmoid').default;\n\nexport const getInitializedForce = (\n  nodes: NodeData[],\n  links: LinkData[],\n  options: {\n    classname: { node: string; link: string };\n    window_size: { width: number; height: number };\n    link_distance: number;\n  }\n): {\n  force_simulation: ForceSimulation;\n  registerGraph: (svg: Element) => void;\n} => {\n  const nums = links.map((x) => x.num);\n  const sigmoid = makeSigmoid({\n    center: stats.mean(nums),\n    deviation: stats.stdev(nums),\n    deviation_output: 0.9,\n  });\n\n  const force_simulation = d3\n    .forceSimulation(nodes as SimulationNodeDatum[])\n    .force('charge', d3.forceManyBody().strength(-200).distanceMax(200))\n    .force(\n      'link',\n      d3\n        .forceLink(links)\n        .distance((d) => options.link_distance * (2 - sigmoid(d.num)))\n        .strength(nodes.length / links.length)\n        .iterations(10)\n    )\n    .force(\n      'center',\n      d3\n        .forceCenter()\n        .x(options.window_size.width / 2)\n        .y(options.window_size.height / 2)\n    )\n    .force('collide', d3.forceCollide(10));\n\n  let graph: ElementSelection | null = null;\n  const registerGraph = (svg: Element) => {\n    graph = d3.select(svg);\n    force_simulation.on('tick', () => {\n      if (graph === null) return;\n      graph.call((selection) => {\n        selection\n          .selectAll('.' + options.classname.node)\n          .call((selection) =>\n            selection.attr(\n              'transform',\n              (d: any) =>\n                d !== undefined && 'translate(' + d.x + ',' + d.y + ')'\n            )\n          );\n        selection\n          .selectAll('.' + options.classname.link)\n          .call((selection) =>\n            selection.attr('d', (d: any) =>\n              d !== undefined\n                ? `M ${d.source.x},${d.source.y} L ${d.target.x},${d.target.y}`\n                : ''\n            )\n          );\n      });\n    });\n  };\n\n  return { force_simulation, registerGraph };\n};\n\nexport default getInitializedForce;\n","export const makePxScaleUtil =\n  (base: number) =>\n  (scale: number = 1): string =>\n    `${base * scale}px`;\n\nconst base_color = process.env.REACT_APP_BASE_COLOR;\nconst main_color = process.env.REACT_APP_MAIN_COLOR;\nconst accent_color = process.env.REACT_APP_ACCENT_COLOR;\n\nexport const colors = {\n  base: base_color ? base_color : '#f8f8f8',\n  main: main_color ? main_color : '#00a8cc',\n  accent: accent_color ? accent_color : '#fe346e',\n  border: '#ccc',\n  text: '#123',\n};\nexport const px = {\n  grid: makePxScaleUtil(20),\n  font_size: makePxScaleUtil(16),\n  max_width: makePxScaleUtil(900),\n};\n\nexport const export_obj = { colors, px };\nexport default export_obj;\n","import React, { FC, useEffect, useRef } from 'react';\nimport * as d3 from 'd3';\nimport { NodeData, ForceSimulation } from './types';\nimport styled from '@emotion/styled';\nimport theme from '../../styles/theme';\n\nexport const Node: FC<{\n  data: NodeData;\n  force_simulation: ForceSimulation;\n  active: boolean;\n  onClick?: (name: string) => void;\n  onFocusName?: (name: string | null) => void;\n}> = ({ data, force_simulation, active, onFocusName, onClick }) => {\n  const root_element = useRef<SVGCircleElement | null>(null);\n\n  //append d3 data\n  useEffect(() => {\n    if (root_element.current === null) return;\n    const root = d3.select(root_element.current);\n    root.datum(data);\n\n    return () => {\n      root.datum();\n    };\n  });\n\n  //drag event\n  useEffect(() => {\n    if (root_element.current === null) return;\n    d3.select(root_element.current as Element).call(\n      d3\n        .drag()\n        .on('start', (_, d: any) => {\n          force_simulation.alphaTarget(0.1).restart();\n          d.fx = d.x;\n          d.fy = d.y;\n        })\n        .on('drag', (event: any, d: any) => {\n          d.fx = event.x;\n          d.fy = event.y;\n        })\n        .on('end', (_, d: any) => {\n          force_simulation.alphaTarget(0).restart();\n          d.fx = null;\n          d.fy = null;\n        })\n    );\n  });\n\n  return (\n    <StyledRoot\n      className=\"node\"\n      active={active}\n      onMouseEnter={() => {\n        onFocusName && onFocusName(data.name);\n      }}\n      onMouseLeave={() => {\n        onFocusName && onFocusName(null);\n      }}\n      onClick={() => {\n        onClick && onClick(data.name);\n      }}\n      ref={root_element}\n    >\n      <circle r={14} />\n      <text y={6}>{data.name.replace(/\\(.*\\)/, '')}</text>\n    </StyledRoot>\n  );\n};\nconst StyledRoot = styled.g<{ active: boolean }>`\n  cursor: pointer;\n  opacity: ${(props) => (props.active ? 1 : 0.3)};\n\n  circle {\n    fill: #fff;\n    stroke: #0001;\n    stroke-width: 7px;\n    opacity: ${(props) => (props.active ? 1 : 0)};\n  }\n\n  text {\n    fill: ${theme.colors.text}c;\n    stroke: #fff7;\n    stroke-width: 7px;\n    paint-order: stroke;\n    font-size: ${theme.px.font_size()};\n    font-family: sans;\n    stroke-linejoin: round;\n  }\n\n  &:hover {\n    circle {\n      fill: ${theme.colors.accent};\n    }\n  }\n`;\n\nexport default Node;\n","import React, { FC, useEffect, useRef } from 'react';\nimport * as d3 from 'd3';\nimport { LinkData } from './types';\nimport styled from '@emotion/styled';\nimport mixColor from 'mix-color';\nimport theme from '../../styles/theme';\n\nexport const Link: FC<{\n  data: LinkData;\n  weight: number;\n  active: boolean;\n  detail: boolean;\n}> = ({ data, weight, active, detail }) => {\n  const line = useRef(null);\n  useEffect(() => {\n    if (line.current === null) return;\n    const root = d3.select(line.current);\n    root.datum(data);\n    return () => {\n      root.datum();\n    };\n  });\n\n  const id = `deregraph-link-${data.id}`;\n\n  return (\n    <>\n      <StyledPath\n        id={id}\n        className=\"link\"\n        weight={weight}\n        active={active}\n        ref={line}\n      ></StyledPath>\n      {detail ? (\n        <StyledLabel y=\"-3\">\n          <textPath href={`#${id}`} startOffset=\"50%\">\n            {data.name}\n          </textPath>\n        </StyledLabel>\n      ) : null}\n    </>\n  );\n};\nconst StyledPath = styled.path<{ weight: number; active: boolean }>`\n  stroke: ${({ weight }) =>\n    mixColor(theme.colors.main, theme.colors.accent, weight)};\n  stroke-width: ${({ weight }) => weight * 7 + 3}px;\n  opacity: ${({ active }) => (active ? 1 : 0.3)};\n  stroke-linecap: round;\n`;\n\nconst StyledLabel = styled.text`\n  fill: #000;\n  text-anchor: middle;\n  font-size: 12px;\n`;\n\nexport default Link;\n","import React, { FC, useEffect, useRef, useState, useMemo } from 'react';\nimport getInitializedForce from './forceSimulation';\nimport Node from './Node';\nimport Link from './Link';\nimport { NodeData, LinkData } from './types';\nimport { useWindowSize } from '@react-hook/window-size';\nimport styled from '@emotion/styled';\nimport stats from 'stats-lite';\nimport * as d3 from 'd3';\nimport theme from '../../styles/theme';\nimport mixColor from 'mix-color';\nimport makeSigmoid from 'awesome-sigmoid';\n\nexport const Graph: FC<{\n  nodes: NodeData[];\n  links: LinkData[];\n  onNodeClick?: (name: string) => void;\n}> = ({ nodes, links, onNodeClick }) => {\n  //setup sigmoid\n  const nums = links.map((x) => x.num);\n  const sigmoid = makeSigmoid({\n    center: stats.mean(nums),\n    deviation: stats.stdev(nums),\n    deviation_output: 0.9,\n  });\n\n  //setup force simulation\n  const [width, height] = useWindowSize();\n  const force = useMemo(\n    () =>\n      getInitializedForce(nodes, links, {\n        classname: { node: 'node', link: 'link' },\n        window_size: { width, height },\n        link_distance: 100,\n      }),\n    [nodes, links, width, height]\n  );\n  const svg = useRef<SVGSVGElement | null>(null);\n  useEffect(() => {\n    if (svg.current === null) return;\n    force.registerGraph(svg.current);\n  });\n\n  //move and zoom handler\n  const graph_position = useRef<{ x: number; y: number }>({ x: 0, y: 0 });\n  const root_group = useRef<SVGGElement | null>(null);\n  useEffect(() => {\n    if (svg.current === null) return;\n    d3.select(svg.current as Element).call(\n      d3\n        .drag()\n        .subject(() => {\n          if (root_group.current === null) return;\n          return { x: graph_position.current.x, y: graph_position.current.y };\n        })\n        .on('drag', (event: any) => {\n          if (root_group.current === null) return;\n          root_group.current.style.transform = `translate(${event.x}px, ${event.y}px)`;\n          graph_position.current = { x: event.x, y: event.y };\n        })\n    );\n  }, []);\n\n  //focus node\n  const [focus_name, setFocusName] = useState<string | null>(null);\n  const friends: { [name: string]: string[] } = nodes\n    .map((x) => x.name)\n    .map((x) => ({\n      [x]: links\n        .map((y) =>\n          y.source_name === x\n            ? y.target_name\n            : y.target_name === x\n            ? y.source_name\n            : null\n        )\n        .filter<string>((x): x is string => typeof x === 'string'),\n    }))\n    .reduce((s, x) => ({ ...s, ...x }));\n\n  //components\n  const link_components = links.map((x) => {\n    const detail = x.source_name === focus_name || x.target_name === focus_name;\n    return (\n      <Link\n        data={x}\n        weight={sigmoid(x.num)}\n        active={focus_name === null || detail}\n        detail={detail}\n        key={x.name}\n      />\n    );\n  });\n\n  const node_components = nodes.map((x) => (\n    <Node\n      data={x}\n      force_simulation={force.force_simulation}\n      active={\n        focus_name === null ||\n        focus_name === x.name ||\n        friends[focus_name].indexOf(x.name) !== -1\n      }\n      onFocusName={setFocusName}\n      onClick={onNodeClick}\n      key={x.name}\n    />\n  ));\n\n  return (\n    <GraphRoot ref={svg}>\n      <g ref={root_group}>\n        {link_components}\n        {node_components}\n      </g>\n    </GraphRoot>\n  );\n};\nconst GraphRoot = styled.svg`\n  display: block;\n  width: 100%;\n  height: 100vh;\n  cursor: all-scroll;\n  background: linear-gradient(\n    0.1turn,\n    ${mixColor('#fff', theme.colors.main, 0.1)} 30%,\n    ${mixColor('#fff', theme.colors.accent, 0.1)}\n  );\n\n  * {\n    transition: fill ease 0.5s, opacity ease 0.5s;\n  }\n`;\n\nexport default Graph;\n","import React, { FC } from 'react';\nimport styled from '@emotion/styled';\nimport Slider from '@material-ui/core/Slider';\nimport Tooltip from '@material-ui/core/Tooltip';\nimport theme from '../../styles/theme';\n\n// components\nexport const FilterNumSlider: FC<{\n  default_value: number;\n  step: number;\n  min: number;\n  max: number;\n  onChange: (num: number) => void;\n}> = ({ default_value, step, min, max, onChange }) => {\n  return (\n    <SliderRoot>\n      <Slider\n        defaultValue={default_value}\n        aria-labelledby=\"filter-num-slider\"\n        valueLabelDisplay=\"auto\"\n        step={step}\n        min={min}\n        max={max}\n        ValueLabelComponent={({ children, open, value }) => (\n          <Tooltip\n            open={open}\n            enterTouchDelay={0}\n            placement=\"top\"\n            title={value}\n          >\n            {children}\n          </Tooltip>\n        )}\n        valueLabelFormat={(x) => `${x}作品以上`}\n        onChangeCommitted={(_, v) => typeof v === 'number' && onChange(v)}\n        marks\n      />\n    </SliderRoot>\n  );\n};\nconst SliderRoot = styled.div`\n  position: absolute;\n  right: ${theme.px.grid()};\n  bottom: 0;\n  width: calc(100vw - ${theme.px.grid(1.5)} * 2);\n  max-width: ${theme.px.grid(20)};\n`;\n\nexport default FilterNumSlider;\n","import React, { FC } from 'react';\nimport styled from '@emotion/styled';\nimport FormControlLabel from '@material-ui/core/FormControlLabel';\nimport Checkbox from '@material-ui/core/Checkbox';\nimport theme from '../../styles/theme';\n\n// components\nexport const MakeCouplingCheckbox: FC<{\n  checked: boolean;\n  onChange: (val: boolean) => void;\n}> = ({ checked, onChange }) => {\n  return (\n    <CheckboxRoot>\n      <FormControlLabel\n        control={\n          <Checkbox\n            checked={checked}\n            onChange={(e) => onChange(e.target.checked)}\n            name=\"resolve_one_to_many\"\n          />\n        }\n        label=\"1対1に解決\"\n      />\n    </CheckboxRoot>\n  );\n};\nconst CheckboxRoot = styled.div`\n  position: absolute;\n  right: 0;\n  bottom: ${theme.px.grid(2)};\n  background: rgba(255, 255, 255, 0.7);\n\n  label {\n    margin: 0;\n    padding: 0 ${theme.px.grid()} 0 0;\n  }\n`;\n\nexport default MakeCouplingCheckbox;\n","import React, { FC } from 'react';\n\nexport const PixivDictLink: FC<{ title: string; text?: string }> = ({\n  title,\n  text,\n}) => (\n  <a\n    href={`https://dic.pixiv.net/a/${title}`}\n    target=\"_blank\"\n    rel=\"noopener noreferrer\"\n  >\n    {(text ? text : title).replace(/\\(.*\\)/, '')}\n  </a>\n);\n\nexport const PixivTagLink: FC<{ title: string; text?: string }> = ({\n  title,\n  text,\n}) => (\n  <a\n    href={`https://www.pixiv.net/tags/${title}`}\n    target=\"_blank\"\n    rel=\"noopener noreferrer\"\n  >\n    {(text ? text : title).replace(/\\(.*\\)/, '')}\n  </a>\n);\n","import React, { FC } from 'react';\nimport { PixivDictLink, PixivTagLink } from './pixiv-utils';\nimport coupling_json from '../couplings.json';\nimport { Couplings, Coupling, Character } from 'yurigraph-scraping';\n\nconst friends = ((): { [name: string]: Coupling[] } => {\n  const couplings: Couplings = coupling_json;\n  const character_names: string[] = couplings\n    .map((x) => x.characters.map((x) => x.name))\n    .reduce((s, x) => [...s, ...x])\n    .filter((x, i, self) => self.indexOf(x) === i);\n  return character_names\n    .map((x) => ({\n      [x]: couplings.filter(\n        (y) => y.characters.find((z) => z.name === x) !== undefined\n      ),\n    }))\n    .reduce((s, x) => ({ ...s, ...x }));\n})();\n\n// components\nexport const FriendsInfo: FC<{ name: string; className?: string }> = ({\n  name,\n  className,\n}) => {\n  if (friends[name] === undefined) return null;\n\n  return (\n    <ol className={className}>\n      {friends[name]\n        .map((x) => ({\n          ...x,\n          num: x.tags.map((x) => x.num).reduce((s, x) => (s > x ? s : x)),\n        }))\n        .sort((x, y) => y.num - x.num)\n        .map((x) => {\n          const friend = x.characters.find((x) => x.name !== name) as Character;\n\n          return (\n            <li key={x.tags[0].name}>\n              {\n                <PixivDictLink\n                  title={friend.dict_entry ? friend.dict_entry : friend.name}\n                  text={friend.name}\n                  key={x.tags[0].name}\n                />\n              }\n              <ul>\n                {x.tags\n                  .sort((x, y) => y.num - x.num)\n                  .map((x) => (\n                    <li key={x.name}>\n                      <PixivTagLink title={x.name} />({x.num}作品)\n                    </li>\n                  ))}\n              </ul>\n            </li>\n          );\n        })}\n    </ol>\n  );\n};\n\nexport default FriendsInfo;\n","import React, { FC } from 'react';\nimport FriendsInfo from '../FriendsInfo';\nimport { Dialog, DialogTitle } from '@material-ui/core';\nimport styled from '@emotion/styled';\nimport { PixivDictLink } from '../pixiv-utils';\nimport theme from '../../styles/theme';\nimport couplings_json_import from '../../couplings.json';\nimport { Character, Couplings } from 'yurigraph-scraping';\n\nconst couplings_json: Couplings = couplings_json_import;\nconst name2character: Map<string, Character> = new Map();\ncouplings_json.forEach((x) => {\n  x.characters.forEach((x) => name2character.set(x.name, x));\n});\n\nexport const FriendsDialog: FC<{\n  name: string;\n  open: boolean;\n  onClose: () => void;\n}> = ({ name, open, onClose }) => {\n  const character = name2character.get(name);\n  if (character === undefined) return null;\n\n  return (\n    <DialogRoot\n      onClose={() => onClose()}\n      aria-labelledby=\"friends-dialog-title\"\n      open={open}\n      fullWidth={true}\n    >\n      <DialogTitle id=\"friends-dialog-title\">\n        <PixivDictLink\n          title={character.dict_entry ? character.dict_entry : character.name}\n          text={character.name}\n        />\n        のカップリング一覧\n      </DialogTitle>\n      <StyledFriendsInfo name={name} />\n    </DialogRoot>\n  );\n};\nconst StyledFriendsInfo = styled(FriendsInfo)`\n  margin-left: ${theme.px.grid(2.5)};\n`;\n\nconst DialogRoot = styled(Dialog)`\n  .close_button {\n    position: absolute;\n    right: 0;\n  }\n`;\n\nexport default FriendsDialog;\n","import React, { useState, FC, useCallback } from 'react';\nimport Graph from './Graph';\nimport FilterNumSlider from './FilterNumSlider';\nimport MakeCouplingCheckbox from './MakeCouplingCheckbox';\nimport FriendsDialog from './FriendsDialog';\nimport { NodeData, LinkData } from './types';\nimport { Couplings } from 'yurigraph-scraping';\nimport stats from 'stats-lite';\nimport couplings_json_import from '../../couplings.json';\nconst deepCopy = require('deep-copy');\n\nconst couplings_json: Couplings = couplings_json_import;\n\n//utils\nconst nums = couplings_json\n  .map((x) => x.tags.map((x) => x.num))\n  .reduce((s, x) => [...s, ...x]);\nconst num_stats = {\n  max: nums.reduce((s, x) => (s > x ? s : x)),\n  min: nums.reduce((s, x) => (s < x ? s : x)),\n  center: parseInt(process.env.REACT_APP_DEFAULT_FILTER_VALUE as string),\n  stdev: stats.stdev(nums),\n};\n\ntype NodesAndLinks = { nodes: NodeData[]; links: LinkData[] };\ntype LinkDataOmitSourceTarget = Omit<LinkData, 'source' | 'target'>;\nconst getNodesAndLinksFromLinks = (\n  base_links: LinkDataOmitSourceTarget[]\n): NodesAndLinks => {\n  const nodes: NodeData[] = base_links\n    .map((x) => [x.source_name, x.target_name])\n    .reduce((s, x) => [...s, ...x])\n    .filter((x, i, self) => self.indexOf(x) === i)\n    .map((x, i) => ({ id: i, name: x }));\n  const node_name2id: { [key: string]: number } = nodes\n    .map((x) => ({ [x.name]: x.id }))\n    .reduce((s, x) => ({ ...s, ...x }));\n\n  const links: LinkData[] = base_links.map((x) => ({\n    ...x,\n    source: node_name2id[x.source_name],\n    target: node_name2id[x.target_name],\n  }));\n\n  return deepCopy({ links, nodes });\n};\n\nconst initGetNodesAndLinks = (): ((num_filter: number) => NodesAndLinks) => {\n  const couplings = couplings_json;\n\n  const all_links: LinkDataOmitSourceTarget[] = couplings\n    .map((x) => ({\n      ...x,\n      tag: x.tags.reduce((s, x) => (s.num > x.num ? s : x)),\n    }))\n    .map((x, i) => ({\n      ...x.tag,\n      id: i,\n      source_name: x.characters[0].name,\n      target_name: x.characters[1].name,\n    }));\n\n  return (num_filter: number): { nodes: NodeData[]; links: LinkData[] } => {\n    return getNodesAndLinksFromLinks(\n      all_links.filter((x) => x.num >= num_filter)\n    );\n  };\n};\nconst getNodesAndLinks = initGetNodesAndLinks();\n\nconst makeCoupling = (nodes_and_links: NodesAndLinks): NodesAndLinks => {\n  const charactors: Set<string> = new Set(\n    nodes_and_links.nodes.map((x) => x.name)\n  );\n  let sorted_links: LinkData[] = nodes_and_links.links.sort(\n    (x, y) => y.num - x.num\n  );\n  let resolved_links: LinkData[] = [];\n\n  sorted_links.forEach((x) => {\n    if (charactors.has(x.source_name) && charactors.has(x.target_name)) {\n      // resolve link\n      resolved_links.push(x);\n      charactors.delete(x.source_name);\n      charactors.delete(x.target_name);\n    }\n  });\n\n  const new_nodes_and_links = getNodesAndLinksFromLinks(resolved_links);\n  return {\n    links: new_nodes_and_links.links,\n    nodes: [\n      ...new_nodes_and_links.nodes,\n      ...Array.from(charactors, (x, i) => ({\n        id: new_nodes_and_links.nodes.length + i,\n        name: x,\n      })),\n    ],\n  };\n};\n\n// components\nexport const GraphRoot: FC<{}> = () => {\n  const default_filter_num = Math.floor(num_stats.center);\n  const [filter_num, setFilterNum] = useState(default_filter_num);\n  const [node_and_links, _setNodesAndLinks] = useState(\n    getNodesAndLinks(Math.floor(filter_num))\n  );\n  const [resolve_one_to_many, setResolveOneToMany] = useState(false);\n  const setNodesAndLinks = useCallback(\n    (filter_num: number, resolve_one_to_many: boolean) =>\n      resolve_one_to_many\n        ? _setNodesAndLinks(makeCoupling(getNodesAndLinks(filter_num)))\n        : _setNodesAndLinks(getNodesAndLinks(filter_num)),\n    []\n  );\n\n  // dialog\n  const [dialog_name, setDialogName] = useState<string | null>(null);\n  const [dialog_open, setDialogOpen] = useState<boolean>(false);\n\n  return (\n    <div>\n      <Graph\n        {...node_and_links}\n        onNodeClick={(name) => {\n          setDialogName(name);\n          setDialogOpen(true);\n        }}\n      />\n      <FilterNumSlider\n        default_value={default_filter_num}\n        step={Math.floor(num_stats.stdev / 12)}\n        min={Math.max(Math.floor(num_stats.center - num_stats.stdev / 3), 0)}\n        max={Math.floor(num_stats.center + num_stats.stdev)}\n        onChange={useCallback(\n          (num) => {\n            setFilterNum(num);\n            setNodesAndLinks(num, resolve_one_to_many);\n          },\n          // eslint-disable-next-line react-hooks/exhaustive-deps\n          [resolve_one_to_many]\n        )}\n      />\n      <MakeCouplingCheckbox\n        checked={resolve_one_to_many}\n        onChange={useCallback(\n          (v) => {\n            setResolveOneToMany(v);\n            setNodesAndLinks(filter_num, v);\n          },\n          // eslint-disable-next-line react-hooks/exhaustive-deps\n          [filter_num]\n        )}\n      />\n      <FriendsDialog\n        name={dialog_name ? dialog_name : ''}\n        open={dialog_open}\n        onClose={() => setDialogOpen(false)}\n      />\n    </div>\n  );\n};\n\nexport default GraphRoot;\n","import 'normalize.css';\nimport { css } from '@emotion/react';\nimport Typography from 'typography';\nimport theme from './theme';\nconst typographyTheme = require('typography-theme-github');\n\nconst typography = new Typography(typographyTheme);\n\ntypography.injectStyles();\n\nexport const global_style = css`\n  body {\n    color: ${theme.colors.text};\n    font-size: ${theme.px.font_size()};\n    background: ${theme.colors.base};\n    line-height: 1.7;\n\n    a {\n      color: #c6255a;\n\n      &:visited {\n        color: #5b001e;\n      }\n    }\n  }\n`;\n","import React from 'react';\nimport styled from '@emotion/styled';\nimport Typography from '@material-ui/core/Typography';\nimport theme from '../styles/theme';\n\n// components\nexport const Menu = () => (\n  <Root>\n    <div>\n      <Typography display=\"inline\" variant=\"h1\">\n        {process.env.REACT_APP_NAME}{' '}\n      </Typography>\n      <a\n        href=\"https://github.com/sititou70/yurigraph\"\n        target=\"_blank\"\n        rel=\"noopener noreferrer\"\n      >\n        リポジトリ\n      </a>\n    </div>\n    <a href=\"#カップリングランキング\">カップリングランキング</a>\n    <div>\n      author:\n      <a\n        href=\"https://twitter.com/sititou70\"\n        target=\"_blank\"\n        rel=\"noopener noreferrer\"\n      >\n        @sititou70\n      </a>\n    </div>\n    update: {new Date().toISOString()}\n  </Root>\n);\nconst Root = styled.div`\n  position: absolute;\n  top: 0;\n  left: 0;\n  padding: ${theme.px.grid(0.5)};\n  background: rgba(255, 255, 255, 0.7);\n  font-size: 0.8rem;\n\n  h1 {\n    font-size: 1rem;\n  }\n\n  div {\n    a {\n      margin-left: ${theme.px.grid(0.5)};\n    }\n  }\n`;\n\nexport default Menu;\n","import React, { FC } from 'react';\nimport Typography from '@material-ui/core/Typography';\nimport { PixivDictLink, PixivTagLink } from './pixiv-utils';\nimport { Coupling, Couplings } from 'yurigraph-scraping';\nimport styled from '@emotion/styled';\nimport theme from '../styles/theme';\nimport coupling_json_import from '../couplings.json';\nconst coupling_json: Couplings = coupling_json_import;\n\ntype CouplingTag = {\n  characters: Coupling['characters'];\n  tag: Coupling['tags'][0];\n};\n\nconst CouplingListItem: FC<{ coupling: CouplingTag; rank: number }> = ({\n  coupling,\n  rank,\n}) => (\n  <StyledListItem rank={rank}>\n    <PixivTagLink title={coupling.tag.name} />\n    <span className=\"characters\">\n      {coupling.characters\n        .map((x) => (\n          <PixivDictLink\n            title={x.dict_entry ? x.dict_entry : x.name}\n            text={x.name}\n          />\n        ))\n        .reduce((s, x) => (\n          <>\n            {s} × {x}\n          </>\n        ))}\n    </span>\n    <span className=\"sideinfo\">({coupling.tag.num}作品)</span>\n  </StyledListItem>\n);\nconst StyledListItem = styled.li<{ rank: number }>`\n  font-size: ${(props) => Math.max(32 - props.rank / 2, 16)}px;\n\n  .characters {\n    display: inline-block;\n    margin-left: 1em;\n    font-size: 0.75em;\n\n    a {\n      opacity: 0.8;\n    }\n  }\n\n  .sideinfo {\n    display: inline-block;\n    margin-left: 1em;\n    font-size: 0.75em;\n  }\n`;\n\nexport const CouplingRanking: FC<{}> = () => {\n  const coupling_tags: CouplingTag[] = coupling_json\n    .map((x) => x.tags.map((y) => ({ characters: x.characters, tag: y })))\n    .reduce((s, x) => [...s, ...x])\n    .sort((x, y) => y.tag.num - x.tag.num);\n  return (\n    <Root>\n      <span>\n        <Typography id=\"カップリングランキング\" variant=\"h2\">\n          カップリングランキング\n        </Typography>\n        <ol>\n          {coupling_tags.map((x, i) => (\n            <CouplingListItem coupling={x} rank={i + 1} key={i} />\n          ))}\n        </ol>\n      </span>\n    </Root>\n  );\n};\nconst Root = styled.div`\n  display: flex;\n  align-items: center;\n  justify-content: center;\n  padding: ${theme.px.grid(2)} ${theme.px.grid()} 0;\n  box-shadow: 0 0 ${theme.px.grid()} #0002;\n\n  h2 {\n    font-size: 1.5rem;\n  }\n\n  ol {\n    margin-top: 10px;\n  }\n`;\n\nexport default CouplingRanking;\n","import React, { useEffect } from 'react';\nimport GraphRoot from './graph';\nimport { Global } from '@emotion/react';\nimport { global_style } from '../styles/GlobalStyle';\nimport Menu from './Menu';\nimport CouplingRanking from './CouplingRanking';\nimport ReactGA from 'react-ga';\n\n// components\nexport const App = () => {\n  useEffect(() => {\n    ReactGA.initialize('UA-158683797-1');\n    ReactGA.pageview(window.location.pathname + window.location.search);\n  }, []);\n\n  return (\n    <div>\n      <Global styles={global_style} />\n      <GraphRoot />\n      <CouplingRanking />\n      <Menu />\n    </div>\n  );\n};\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' }\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './components/App';\nimport './styles/GlobalStyle';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}