{"version":3,"sources":["styles/theme.ts","styles/GlobalStyle.ts","components/pixiv-utils.tsx","components/CouplingRanking.tsx","components/graph/CouplingSelector.tsx","components/graph/FilterNumSlider.tsx","components/FriendsInfo.tsx","components/graph/FriendsDialog.tsx","components/graph/forceSimulation.ts","components/graph/Link.tsx","components/graph/Node.tsx","components/graph/Graph.tsx","components/graph/MakeCouplingSettings.tsx","components/graph/index.tsx","components/Menu.tsx","components/App.tsx","serviceWorker.js","index.js"],"names":["muiTheme","createTheme","palette","primary","main","pink","makePxScaleUtil","base","scale","base_color","process","REACT_APP_BASE_COLOR","main_color","accent_color","theme","colors","accent","border","text","px","grid","font_size","max_width","border_radius","typographyTheme","require","Typography","injectStyles","global_style","css","PixivDictLink","title","href","target","rel","replace","PixivTagLink","coupling_json","coupling_json_import","CouplingListItem","coupling","rank","StyledListItem","tag","name","className","characters","map","x","dict_entry","reduce","s","num","styled","li","props","Math","max","Root","div","CouplingRanking","coupling_tags","tags","y","sort","id","variant","i","CouplingSelector","all_links","auto_selected_links","onChanged","useState","Map","selected_links","_setSelectedLinks","setSelectedLinks","selectedCharactors","Set","Array","from","values","source_name","target_name","auto_selected_names","useMemo","sorted_all_links","coupling_mode","setCouplingMode","Checkbox","checked","indeterminate","disabled","FormControlLabel","control","onChange","e","label","Tooltip","IconButton","onClick","has","changed_map","set","delete","SliderRoot","FilterNumSlider","default_value","step","min","getLabelText","useCallback","Slider","defaultValue","valueLabelDisplay","getAriaValueText","valueLabelFormat","onChangeCommitted","_","v","marks","friends","couplings","filter","self","indexOf","undefined","find","z","FriendsInfo","friend","couplings_json","couplings_json_import","name2character","forEach","StyledFriendsInfo","DialogRoot","Dialog","FriendsDialog","open","onClose","character","get","fullWidth","DialogTitle","makeSigmoid","default","getInitializedForce","nodes","links","options","nums","sigmoid","center","stats","mean","deviation","stdev","deviation_output","force_simulation","d3","force","strength","distanceMax","distance","d","link_distance","iterations","window_size","width","height","graph","registerGraph","svg","on","call","selection","selectAll","classname","node","attr","link","source","StyledPath","path","weight","mixColor","active","StyledLabel","Link","data","detail","line","useRef","useEffect","current","root","datum","ref","startOffset","StyledRoot","g","Node","onFocusName","root_element","alphaTarget","restart","fx","fy","event","onMouseEnter","onMouseLeave","r","GraphRoot","Graph","onNodeClick","useWindowSize","graph_position","root_group","subject","style","transform","focus_name","setFocusName","link_components","node_components","MakeCouplingSettings","onClickSettingButton","deepCopy","num_stats","parseInt","getNodesAndLinksFromLinks","base_links","node_name2id","getNodesAndLinks","num_filter","initGetNodesAndLinks","default_filter_num","floor","filter_num","setFilterNum","node_and_links","_setNodesAndLinks","resolve_one_to_many","setResolveOneToMany","setNodesAndLinks","reserved_links","nodes_and_links","reserved_charactors","charactors","reserved_link_names","sorted_links","resolved_links","concat","push","new_nodes_and_links","length","makeCoupling","dialog_name","setDialogName","dialog_open","setDialogOpen","drawer_open","setDrawerOpen","setReservedLinks","Drawer","anchor","Menu","display","App","ReactGA","initialize","pageview","window","location","pathname","search","styles","Boolean","hostname","match","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"2NAGaA,EAAWC,YAAY,CAClCC,QAAS,CACPC,QAAS,CACPC,KAAMC,IAAK,SAKJC,EACX,SAACC,GAAD,OACA,eAACC,EAAD,uDAAiB,EAAjB,gBACKD,EAAOC,EADZ,QAGIC,EAAaC,ohBAAYC,qBACzBC,EAAaF,UACbG,EAAeH,UAkBNI,EAFM,CAAEC,OAdD,CACpBR,KAAME,GAA0B,UAChCL,KAAmBQ,EACnBI,OAAuBH,EACvBI,OAAQ,OACRC,KAAM,QASuBC,GAPb,CAChBC,KAAMd,EAAgB,IACtBe,UAAWf,EAAgB,IAC3BgB,UAAWhB,EAAgB,KAC3BiB,cAAejB,EAAgB,KC3B3BkB,EAAkBC,EAAQ,KAEb,IAAIC,IAAWF,GAEvBG,eAEJ,I,YAAMC,EAAeC,YAAH,6NAEZf,EAAMC,OAAOG,KACTJ,EAAMK,GAAGE,YACRP,EAAMC,OAAOR,M,wCCZlBuB,EAAsD,SAAC,GAAD,IACjEC,EADiE,EACjEA,MACAb,EAFiE,EAEjEA,KAFiE,OAIjE,mBACEc,KAAI,kCAA6BD,GACjCE,OAAO,SACPC,IAAI,sBAHN,UAKIhB,GAAca,GAAOI,QAAQ,SAAU,OAIhCC,EAAqD,SAAC,GAAD,IAChEL,EADgE,EAChEA,MACAb,EAFgE,EAEhEA,KAFgE,OAIhE,mBACEc,KAAI,qCAAgCD,GACpCE,OAAO,SACPC,IAAI,sBAHN,UAKIhB,GAAca,GAAOI,QAAQ,SAAU,OCjBvCE,EAA2BC,EAO3BC,EAAgE,SAAC,GAAD,IACpEC,EADoE,EACpEA,SACAC,EAFoE,EAEpEA,KAFoE,OAIpE,eAACC,EAAD,CAAgBD,KAAMA,EAAtB,UACE,cAAC,EAAD,CAAcV,MAAOS,EAASG,IAAIC,OAClC,sBAAMC,UAAU,aAAhB,SACGL,EAASM,WACPC,KAAI,SAACC,GAAD,OACH,cAAC,EAAD,CACEjB,MAAOiB,EAAEC,WAAaD,EAAEC,WAAaD,EAAEJ,KACvC1B,KAAM8B,EAAEJ,UAGXM,QAAO,SAACC,EAAGH,GAAJ,OACN,qCACGG,EADH,SACSH,UAIf,uBAAMH,UAAU,WAAhB,cAA6BL,EAASG,IAAIS,IAA1C,uBAGEV,EAAiBW,IAAOC,GAAV,4RACL,SAACC,GAAD,OAAWC,KAAKC,IAAI,GAAKF,EAAMd,KAAO,EAAG,OAuClDiB,EAAOL,IAAOM,IAAV,uOAIG7C,EAAMK,GAAGC,KAAK,GAAMN,EAAMK,GAAGC,OAAYN,EAAMK,GAAGC,KAAK,GAChDN,EAAMK,GAAGC,QAWdwC,EApCwB,WACrC,IAAMC,EAA+BxB,EAClCU,KAAI,SAACC,GAAD,OAAOA,EAAEc,KAAKf,KAAI,SAACgB,GAAD,MAAQ,CAAEjB,WAAYE,EAAEF,WAAYH,IAAKoB,SAC/Db,QAAO,SAACC,EAAGH,GAAJ,4BAAcG,GAAd,YAAoBH,OAC3BgB,MAAK,SAAChB,EAAGe,GAAJ,OAAUA,EAAEpB,IAAIS,IAAMJ,EAAEL,IAAIS,OACpC,OACE,cAACM,EAAD,UACE,iCACE,cAAChC,EAAA,EAAD,CAAYuC,GAAG,qEAAcC,QAAQ,KAArC,gFAGA,6BACGL,EAAcd,KAAI,SAACC,EAAGmB,GAAJ,OACjB,cAAC,EAAD,CAAkB3B,SAAUQ,EAAGP,KAAM0B,EAAI,GAAQA,c,8ICiFvDT,GAAOL,IAAOM,IAAV,oXASW7C,EAAMK,GAAGC,OAkBhBN,EAAMK,GAAGC,QAKRgD,GA1KV,SAAC,GAAmD,IAAjDC,EAAgD,EAAhDA,UAAWC,EAAqC,EAArCA,oBAAqBC,EAAgB,EAAhBA,UACtC,EAA4CC,mBAE1C,IAAIC,KAFN,mBAAOC,EAAP,KAAuBC,EAAvB,KAGMC,EAAmB,SAAC7B,GAAD,OACvB4B,EAAkB,IAAIF,IAAI1B,KACtB8B,EAAqB,IAAIC,IAC7BC,MAAMC,KAAKN,EAAeO,UACvBlC,KAAI,SAACC,GAAD,MAAO,CAACA,EAAEkC,YAAalC,EAAEmC,gBAC7BjC,QAAO,SAACC,EAAGH,GAAJ,4BAAcG,GAAd,YAAoBH,MAAI,KAG9BoC,EAAsBC,mBAC1B,kBAAM,IAAIP,IAAIR,EAAoBvB,KAAI,SAACC,GAAD,OAAOA,EAAEJ,WAC/C,CAAC0B,IAEGgB,EAAmBD,mBACvB,kBAAMhB,EAAUL,MAAK,SAAChB,EAAGe,GAAJ,OAAUA,EAAEX,IAAMJ,EAAEI,SACzC,CAACiB,IAGH,EAAyCG,oBAAS,GAAlD,mBAAOe,EAAP,KAAsBC,EAAtB,KAEA,OACE,eAAC,GAAD,WACE,yJACA,oCACE,yDACA,qBAAI3C,UAAU,UAAd,UACE,+BACE,cAAC4C,GAAA,EAAD,CAAU5C,UAAU,SAAS6C,SAAS,IADxC,wMAIA,+BACE,cAACD,GAAA,EAAD,CAAU5C,UAAU,SAAS6C,SAAS,IADxC,sDAIA,+BACE,cAACD,GAAA,EAAD,CACE5C,UAAU,SACV6C,SAAS,EACTC,eAAe,EACfC,UAAU,IALd,sLASA,+BACE,cAACH,GAAA,EAAD,CAAU5C,UAAU,SAAS6C,SAAS,EAAOE,UAAU,IADzD,8SAOJ,cAACC,GAAA,EAAD,CACEC,QACE,cAACL,GAAA,EAAD,CACEC,QAASH,EACTQ,SAAU,SAACC,GAAD,OAAOR,EAAgBQ,EAAE/D,OAAOyD,UAC1C9C,KAAK,mBAGTqD,MACE,0EAEE,cAACC,GAAA,EAAD,CACEnE,MAAM,wLACNc,UAAU,MAFZ,SAIE,cAAC,IAAD,WAKR,cAACgD,GAAA,EAAD,CACEC,QACE,cAACK,EAAA,EAAD,CACEC,QAAS,WACPxB,EAAiB,IAAIH,KACrBF,EAAU,KAHd,SAME,cAAC,IAAD,MAGJ0B,MAAO,+CAET,6BACGX,EAAiBvC,KAAI,SAACC,GAAD,OACpB,6BACE,cAAC6C,GAAA,EAAD,CACEC,QACE,cAACL,GAAA,EAAD,CACE7C,KAAI,UAAKI,EAAEJ,KAAP,8CACJ8C,QAAShB,EAAe2B,IAAIrD,EAAEJ,MAC9B+C,eACGjB,EAAe2B,IAAIrD,EAAEJ,OACtBwC,EAAoBiB,IAAIrD,EAAEJ,MAE5BgD,UACGlB,EAAe2B,IAAIrD,EAAEJ,QACpB2C,IACCV,EAAmBwB,IAAIrD,EAAEkC,cACxBL,EAAmBwB,IAAIrD,EAAEmC,eAC3BC,EAAoBiB,IAAIrD,EAAEJ,OAE9BmD,SAAU,SAACC,GACT,IAAIM,EACAN,EAAE/D,OAAOyD,SACXY,EAAc5B,EAAe6B,IAAIvD,EAAEJ,KAAMI,GACzC4B,EAAiB0B,KAEjB5B,EAAe8B,OAAOxD,EAAEJ,MACxB0D,EAAc5B,EACdE,EAAiBF,IAGnBH,EAAUQ,MAAMC,KAAKsB,EAAYrB,cAIvCgB,MACE,iCACGjD,EAAEJ,KACH,cAACsD,GAAA,EAAD,CACEnE,MAAK,UAAKiB,EAAEkC,YAAP,iBAAwBlC,EAAEmC,YAA1B,aAA0CnC,EAAEI,IAA5C,iBACLP,UAAU,MAFZ,SAIE,cAAC,IAAD,YAvCDG,EAAEJ,e,UCvEf6D,GAAapD,IAAOM,IAAV,oJAEL7C,EAAMK,GAAGC,KAAK,KACbN,EAAMK,GAAGC,KAAK,IACFN,EAAMK,GAAGC,KAAK,GACvBN,EAAMK,GAAGC,KAAK,KAIdsF,GA3BV,SAAC,GAAiD,IAA/CC,EAA8C,EAA9CA,cAAeC,EAA+B,EAA/BA,KAAMC,EAAyB,EAAzBA,IAAKpD,EAAoB,EAApBA,IAAKsC,EAAe,EAAfA,SAC/Be,EAAeC,uBAAY,SAAC/D,GAAD,gBAAUA,EAAV,8BAAmB,IACpD,OACE,cAACyD,GAAD,UACE,cAACO,GAAA,EAAD,CACEC,aAAcN,EACdC,KAAMA,EACNC,IAAKA,EACLpD,IAAKA,EACLyD,kBAAkB,OAClBC,iBAAkBL,EAClBM,iBAAkBN,EAClBO,kBAAmB,SAACC,EAAGC,GAAJ,MAAuB,kBAANA,GAAkBxB,EAASwB,IAC/DC,OAAK,O,yCCpBPC,GAAW,WACf,IAAMC,EAAuBrF,EAK7B,OAJkCqF,EAC/B3E,KAAI,SAACC,GAAD,OAAOA,EAAEF,WAAWC,KAAI,SAACC,GAAD,OAAOA,EAAEJ,WACrCM,QAAO,SAACC,EAAGH,GAAJ,4BAAcG,GAAd,YAAoBH,OAC3B2E,QAAO,SAAC3E,EAAGmB,EAAGyD,GAAP,OAAgBA,EAAKC,QAAQ7E,KAAOmB,KAE3CpB,KAAI,SAACC,GAAD,sBACFA,EAAI0E,EAAUC,QACb,SAAC5D,GAAD,YAAkD+D,IAA3C/D,EAAEjB,WAAWiF,MAAK,SAACC,GAAD,OAAOA,EAAEpF,OAASI,YAG9CE,QAAO,SAACC,EAAGH,GAAJ,mBAAC,eAAeG,GAAMH,MAZjB,GA0DFiF,GA1CsD,SAAC,GAG/D,IAFLrF,EAEI,EAFJA,KACAC,EACI,EADJA,UAEA,YAAsBiF,IAAlBL,GAAQ7E,GAA4B,KAGtC,oBAAIC,UAAWA,EAAf,SACG4E,GAAQ7E,GACNG,KAAI,SAACC,GAAD,mBAAC,eACDA,GADA,IAEHI,IAAKJ,EAAEc,KAAKf,KAAI,SAACC,GAAD,OAAOA,EAAEI,OAAKF,QAAO,SAACC,EAAGH,GAAJ,OAAWG,EAAIH,EAAIG,EAAIH,UAE7DgB,MAAK,SAAChB,EAAGe,GAAJ,OAAUA,EAAEX,IAAMJ,EAAEI,OACzBL,KAAI,SAACC,GACJ,IAAMkF,EAASlF,EAAEF,WAAWiF,MAAK,SAAC/E,GAAD,OAAOA,EAAEJ,OAASA,KAEnD,OACE,+BAEI,cAAC,EAAD,CACEb,MAAOmG,EAAOjF,WAAaiF,EAAOjF,WAAaiF,EAAOtF,KACtD1B,KAAMgH,EAAOtF,MACRI,EAAEc,KAAK,GAAGlB,MAGnB,6BACGI,EAAEc,KACAE,MAAK,SAAChB,EAAGe,GAAJ,OAAUA,EAAEX,IAAMJ,EAAEI,OACzBL,KAAI,SAACC,GAAD,OACH,+BACE,cAAC,EAAD,CAAcjB,MAAOiB,EAAEJ,OADzB,IACmCI,EAAEI,IADrC,kBAASJ,EAAEJ,aAZVI,EAAEc,KAAK,GAAGlB,YC7BzBuF,GAA4BC,EAC5BC,GAAyC,IAAI5D,IACnD0D,GAAeG,SAAQ,SAACtF,GACtBA,EAAEF,WAAWwF,SAAQ,SAACtF,GAAD,OAAOqF,GAAe9B,IAAIvD,EAAEJ,KAAMI,SAGlD,I,qBA+BDuF,GAAoBlF,YAAO4E,GAAP5E,CAAH,gDACNvC,EAAMK,GAAGC,KAAK,MAGzBoH,GAAanF,YAAOoF,KAAPpF,CAAH,qKAQDqF,GAvCV,SAAC,GAA6B,IAA3B9F,EAA0B,EAA1BA,KAAM+F,EAAoB,EAApBA,KAAMC,EAAc,EAAdA,QACZC,EAAYR,GAAeS,IAAIlG,GACrC,YAAkBkF,IAAde,EAAgC,KAGlC,eAACL,GAAD,CACEI,QAAS,kBAAMA,KACf,kBAAgB,uBAChBD,KAAMA,EACNI,WAAW,EAJb,UAME,eAACC,GAAA,EAAD,CAAa/E,GAAG,uBAAhB,UACE,iCACE,cAAC,EAAD,CACElC,MAAO8G,EAAU5F,WAAa4F,EAAU5F,WAAa4F,EAAUjG,KAC/D1B,KAAM2H,EAAUjG,OAHpB,4DAOA,cAACuD,EAAA,EAAD,CAAY,aAAW,QAAQC,QAASwC,EAAxC,SACE,cAAC,KAAD,SAGJ,cAACL,GAAD,CAAmB3F,KAAMA,Q,4DCtCzBqG,GAAcxH,EAAQ,KAAmByH,QAwEhCC,GAtEoB,SACjCC,EACAC,EACAC,GASA,IAAMC,EAAOF,EAAMtG,KAAI,SAACC,GAAD,OAAOA,EAAEI,OAC1BoG,EAAUP,GAAY,CAC1BQ,OAAQC,IAAMC,KAAKJ,GACnBK,UAAWF,IAAMG,MAAMN,GACvBO,iBAAkB,KAGdC,EAAmBC,KACNZ,GAChBa,MAAM,SAAUD,OAAmBE,UAAU,KAAKC,YAAY,MAC9DF,MACC,OACAD,KACaX,GACVe,UAAS,SAACC,GAAD,OAAOf,EAAQgB,eAAiB,EAAId,EAAQa,EAAEjH,SACvD8G,SAAS,GACTK,WAAW,KAEfN,MACC,SACAD,OAEGhH,EAAEsG,EAAQkB,YAAYC,MAAQ,GAC9B1G,EAAEuF,EAAQkB,YAAYE,OAAS,IAEnCT,MAAM,UAAWD,KAAgB,KAEhCW,EAAiC,KA4BrC,MAAO,CAAEZ,mBAAkBa,cA3BL,SAACC,GACrBF,EAAQX,KAAUa,GAClBd,EAAiBe,GAAG,QAAQ,WACZ,OAAVH,GACJA,EAAMI,MAAK,SAACC,GACVA,EACGC,UAAU,IAAM3B,EAAQ4B,UAAUC,MAClCJ,MAAK,SAACC,GAAD,OACJA,EAAUI,KACR,aACA,SAACf,GAAD,YACQvC,IAANuC,GAAmB,aAAeA,EAAErH,EAAI,IAAMqH,EAAEtG,EAAI,UAG5DiH,EACGC,UAAU,IAAM3B,EAAQ4B,UAAUG,MAClCN,MAAK,SAACC,GAAD,OACJA,EAAUI,KAAK,KAAK,SAACf,GAAD,YACZvC,IAANuC,EAAA,YACSA,EAAEiB,OAAOtI,EADlB,YACuBqH,EAAEiB,OAAOvH,EADhC,cACuCsG,EAAEpI,OAAOe,EADhD,YACqDqH,EAAEpI,OAAO8B,GAC1D,kBCvBZwH,GAAalI,IAAOmI,KAAV,iHACJ,gBAAGC,EAAH,EAAGA,OAAH,OACRC,KAAS5K,EAAMC,OAAOX,KAAMU,EAAMC,OAAOC,OAAQyK,MACnC,mBAAyB,EAAzB,EAAGA,OAA0B,KAClC,qBAAGE,OAAuB,EAAI,MAIrCC,GAAcvI,IAAOnC,KAAV,yFAMF2K,GA9CV,SAAC,GAAsC,IAApCC,EAAmC,EAAnCA,KAAML,EAA6B,EAA7BA,OAAQE,EAAqB,EAArBA,OAAQI,EAAa,EAAbA,OACtBC,EAAOC,iBAAO,MACpBC,qBAAU,WACR,GAAqB,OAAjBF,EAAKG,QAAT,CACA,IAAMC,EAAOpC,KAAUgC,EAAKG,SAE5B,OADAC,EAAKC,MAAMP,GACJ,WACLM,EAAKC,aAIT,IAAMpI,EAAE,yBAAqB6H,EAAK7H,IAElC,OACE,qCACE,cAACsH,GAAD,CACEtH,GAAIA,EACJpB,UAAU,OACV4I,OAAQA,EACRE,OAAQA,EACRW,IAAKN,IAEND,EACC,cAACH,GAAD,CAAa7H,EAAE,KAAf,SACE,0BAAU/B,KAAI,WAAMiC,GAAMsI,YAAY,MAAtC,SACGT,EAAKlJ,SAGR,SC6BJ4J,GAAanJ,IAAOoJ,EAAV,6bAEH,SAAClJ,GAAD,OAAYA,EAAMoI,OAAS,EAAI,MAS7B,SAACpI,GAAD,OAAYA,EAAMoI,OAAS,EAAI,IAIlC7K,EAAMC,OAAOG,KAIRJ,EAAMK,GAAGE,YAOZP,EAAMC,OAAOC,QAKZ0L,GAxFV,SAAC,GAA8D,IAA5DZ,EAA2D,EAA3DA,KAAM/B,EAAqD,EAArDA,iBAAkB4B,EAAmC,EAAnCA,OAAQgB,EAA2B,EAA3BA,YAAavG,EAAc,EAAdA,QAC7CwG,EAAeX,iBAAgC,MAoCrD,OAjCAC,qBAAU,WACR,GAA6B,OAAzBU,EAAaT,QAAjB,CACA,IAAMC,EAAOpC,KAAU4C,EAAaT,SAGpC,OAFAC,EAAKC,MAAMP,GAEJ,WACLM,EAAKC,aAKTH,qBAAU,WACqB,OAAzBU,EAAaT,SACjBnC,KAAU4C,EAAaT,SAAoBpB,KACzCf,OAEGc,GAAG,SAAS,SAACxD,EAAG+C,GACfN,EAAiB8C,YAAY,IAAKC,UAClCzC,EAAE0C,GAAK1C,EAAErH,EACTqH,EAAE2C,GAAK3C,EAAEtG,KAEV+G,GAAG,QAAQ,SAACmC,EAAY5C,GACvBA,EAAE0C,GAAKE,EAAMjK,EACbqH,EAAE2C,GAAKC,EAAMlJ,KAEd+G,GAAG,OAAO,SAACxD,EAAG+C,GACbN,EAAiB8C,YAAY,GAAGC,UAChCzC,EAAE0C,GAAK,KACP1C,EAAE2C,GAAK,YAMb,eAACR,GAAD,CACE3J,UAAU,OACV8I,OAAQA,EACRuB,aAAc,WACZP,GAAeA,EAAYb,EAAKlJ,OAElCuK,aAAc,WACZR,GAAeA,EAAY,OAE7BvG,QAAS,WACPA,GAAWA,EAAQ0F,EAAKlJ,OAE1B0J,IAAKM,EAZP,UAcE,wBAAQQ,EAAG,KACX,sBAAMrJ,EAAG,EAAT,SAAa+H,EAAKlJ,KAAKT,QAAQ,SAAU,UCqDzCkL,GAAYhK,IAAOwH,IAAV,sTAMTa,KAAS,OAAQ5K,EAAMC,OAAOX,KAAM,IACpCsL,KAAS,OAAQ5K,EAAMC,OAAOC,OAAQ,KAc7BsM,GA1HV,SAAC,GAAmC,IAAjClE,EAAgC,EAAhCA,MAAOC,EAAyB,EAAzBA,MAAOkE,EAAkB,EAAlBA,YAEdhE,EAAOF,EAAMtG,KAAI,SAACC,GAAD,OAAOA,EAAEI,OAC1BoG,EAAUP,KAAY,CAC1BQ,OAAQC,IAAMC,KAAKJ,GACnBK,UAAWF,IAAMG,MAAMN,GACvBO,iBAAkB,KAIpB,EAAwB0D,eAAxB,mBAAO/C,EAAP,KAAcC,EAAd,KACMT,EAAQ5E,mBACZ,kBACE8D,GAAoBC,EAAOC,EAAO,CAChC6B,UAAW,CAAEC,KAAM,OAAQE,KAAM,QACjCb,YAAa,CAAEC,QAAOC,UACtBJ,cAAe,QAEnB,CAAClB,EAAOC,EAAOoB,EAAOC,IAElBG,EAAMoB,iBAA6B,MACzCC,qBAAU,WACY,OAAhBrB,EAAIsB,SACRlC,EAAMW,cAAcC,EAAIsB,YAI1B,IAAMsB,EAAiBxB,iBAAiC,CAAEjJ,EAAG,EAAGe,EAAG,IAC7D2J,EAAazB,iBAA2B,MAC9CC,qBAAU,WACY,OAAhBrB,EAAIsB,SACRnC,KAAUa,EAAIsB,SAAoBpB,KAChCf,OAEG2D,SAAQ,WACP,GAA2B,OAAvBD,EAAWvB,QACf,MAAO,CAAEnJ,EAAGyK,EAAetB,QAAQnJ,EAAGe,EAAG0J,EAAetB,QAAQpI,MAEjE+G,GAAG,QAAQ,SAACmC,GACgB,OAAvBS,EAAWvB,UACfuB,EAAWvB,QAAQyB,MAAMC,UAAzB,oBAAkDZ,EAAMjK,EAAxD,eAAgEiK,EAAMlJ,EAAtE,OACA0J,EAAetB,QAAU,CAAEnJ,EAAGiK,EAAMjK,EAAGe,EAAGkJ,EAAMlJ,UAGrD,IAGH,MAAmCS,mBAAwB,MAA3D,mBAAOsJ,EAAP,KAAmBC,EAAnB,KACMtG,EAAwC2B,EAC3CrG,KAAI,SAACC,GAAD,OAAOA,EAAEJ,QACbG,KAAI,SAACC,GAAD,sBACFA,EAAIqG,EACFtG,KAAI,SAACgB,GAAD,OACHA,EAAEmB,cAAgBlC,EACde,EAAEoB,YACFpB,EAAEoB,cAAgBnC,EAClBe,EAAEmB,YACF,QAELyC,QAAe,SAAC3E,GAAD,MAAiC,kBAANA,SAE9CE,QAAO,SAACC,EAAGH,GAAJ,mBAAC,eAAeG,GAAMH,MAG1BgL,EAAkB3E,EAAMtG,KAAI,SAACC,GACjC,IAAM+I,EAAS/I,EAAEkC,cAAgB4I,GAAc9K,EAAEmC,cAAgB2I,EACjE,OACE,cAAC,GAAD,CACEhC,KAAM9I,EACNyI,OAAQjC,EAAQxG,EAAEI,KAClBuI,OAAuB,OAAfmC,GAAuB/B,EAC/BA,OAAQA,GACH/I,EAAEJ,SAKPqL,EAAkB7E,EAAMrG,KAAI,SAACC,GAAD,OAChC,cAAC,GAAD,CACE8I,KAAM9I,EACN+G,iBAAkBE,EAAMF,iBACxB4B,OACiB,OAAfmC,GACAA,IAAe9K,EAAEJ,OACwB,IAAzC6E,EAAQqG,GAAYjG,QAAQ7E,EAAEJ,MAEhC+J,YAAaoB,EACb3H,QAASmH,GACJvK,EAAEJ,SAIX,OACE,cAAC,GAAD,CAAW0J,IAAKzB,EAAhB,SACE,oBAAGyB,IAAKoB,EAAR,UACGM,EACAC,Q,qBC/EHvK,GAAOL,IAAOM,IAAV,mQAGE7C,EAAMK,GAAGC,KAAK,GACXN,EAAMK,GAAGC,KAAK,IACbN,EAAMC,OAAOR,KACTO,EAAMK,GAAGC,OACVN,EAAMK,GAAGI,gBAAuBT,EAAMK,GAAGI,gBAK3CT,EAAMK,GAAGC,KAAK,KAIhB8M,GAvCV,SAAC,GAAiD,IAA/CxI,EAA8C,EAA9CA,QAASK,EAAqC,EAArCA,SAAUoI,EAA2B,EAA3BA,qBACzB,OACE,eAAC,GAAD,WACE,cAACtI,GAAA,EAAD,CACEC,QACE,cAACL,GAAA,EAAD,CACEC,QAASA,EACTK,SAAU,SAACC,GAAD,OAAOD,EAASC,EAAE/D,OAAOyD,UACnC9C,KAAK,wBAGTqD,MAAM,+BAER,cAACE,EAAA,EAAD,CACEP,UAAWF,EACX,aAAW,QACXU,QAAS+H,EAHX,SAKE,cAAC,KAAD,UCdFC,GAAW3M,EAAQ,KAEnB0G,GAA4BC,EAG5BmB,GAAOpB,GACVpF,KAAI,SAACC,GAAD,OAAOA,EAAEc,KAAKf,KAAI,SAACC,GAAD,OAAOA,EAAEI,UAC/BF,QAAO,SAACC,EAAGH,GAAJ,4BAAcG,GAAd,YAAoBH,OACxBqL,GAAY,CAChB5K,IAAK8F,GAAKrG,QAAO,SAACC,EAAGH,GAAJ,OAAWG,EAAIH,EAAIG,EAAIH,KACxC6D,IAAK0C,GAAKrG,QAAO,SAACC,EAAGH,GAAJ,OAAWG,EAAIH,EAAIG,EAAIH,KACxCyG,OAAQ6E,SAAS5N,OACjBmJ,MAAOH,IAAMG,MAAMN,KAIfgF,GAA4B,SAChCC,GAEA,IAAMpF,EAAoBoF,EACvBzL,KAAI,SAACC,GAAD,MAAO,CAACA,EAAEkC,YAAalC,EAAEmC,gBAC7BjC,QAAO,SAACC,EAAGH,GAAJ,4BAAcG,GAAd,YAAoBH,OAC3B2E,QAAO,SAAC3E,EAAGmB,EAAGyD,GAAP,OAAgBA,EAAKC,QAAQ7E,KAAOmB,KAC3CpB,KAAI,SAACC,EAAGmB,GAAJ,MAAW,CAAEF,GAAIE,EAAGvB,KAAMI,MAC3ByL,EAA0CrF,EAC7CrG,KAAI,SAACC,GAAD,sBAAWA,EAAEJ,KAAOI,EAAEiB,OAC1Bf,QAAO,SAACC,EAAGH,GAAJ,mBAAC,eAAeG,GAAMH,MAE1BqG,EAAoBmF,EAAWzL,KAAI,SAACC,GAAD,mBAAC,eACrCA,GADoC,IAEvCsI,OAAQmD,EAAazL,EAAEkC,aACvBjD,OAAQwM,EAAazL,EAAEmC,kBAGzB,OAAOiJ,GAAS,CAAE/E,QAAOD,WAwBrBsF,GArBuB,WAC3B,IAEMrK,EAFY8D,GAGfpF,KAAI,SAACC,GAAD,mBAAC,eACDA,GADA,IAEHL,IAAKK,EAAEc,KAAKZ,QAAO,SAACC,EAAGH,GAAJ,OAAWG,EAAEC,IAAMJ,EAAEI,IAAMD,EAAIH,UAEnDD,KAAI,SAACC,EAAGmB,GAAJ,mBAAC,eACDnB,EAAEL,KADF,IAEHsB,GAAIE,EACJe,YAAalC,EAAEF,WAAW,GAAGF,KAC7BuC,YAAanC,EAAEF,WAAW,GAAGF,UAGjC,OAAO,SAAC+L,GACN,OAAOJ,GACLlK,EAAUsD,QAAO,SAAC3E,GAAD,OAAOA,EAAEI,KAAOuL,OAIdC,GAuJnBlL,GAAOL,IAAOM,IAAV,4PAEK7C,EAAMK,GAAGC,OACNN,EAAMC,OAAOR,KACTO,EAAMK,GAAGC,OAKPN,EAAMK,GAAGC,QAKlBiM,GAtHkB,WAC/B,IAAMwB,EAAqBrL,KAAKsL,MAAMT,GAAU5E,QAChD,EAAmCjF,mBAASqK,GAA5C,mBAAOE,EAAP,KAAmBC,EAAnB,KACA,EAA4CxK,mBAC1CkK,GAAiBlL,KAAKsL,MAAMC,KAD9B,mBAAOE,EAAP,KAAuBC,EAAvB,KAGA,EAAmD1K,oBAAS,GAA5D,mBAAO2K,EAAP,KAA4BC,EAA5B,KACMC,EAAmBtI,uBACvB,SACEgI,EACAI,EACAG,GAHF,OAMMJ,EADJC,EA1De,SACnBI,EACAD,GAEA,IAAME,EAAmC,IAAI1K,IAC3CwK,EACGvM,KAAI,SAACC,GAAD,MAAO,CAACA,EAAEkC,YAAalC,EAAEmC,gBAC7BjC,QAAO,SAACC,EAAGH,GAAJ,4BAAcG,GAAd,YAAoBH,MAAI,KAE9ByM,EAA0B,IAAI3K,IAClCyK,EAAgBnG,MACbrG,KAAI,SAACC,GAAD,OAAOA,EAAEJ,QACb+E,QAAO,SAAC3E,GAAD,OAAQwM,EAAoBnJ,IAAIrD,OAEtC0M,EAAmC,IAAI5K,IAC3CwK,EAAevM,KAAI,SAACC,GAAD,OAAOA,EAAEJ,SAE1B+M,EAA2BJ,EAAgBlG,MAC5C1B,QAAO,SAAC3E,GAAD,OAAQ0M,EAAoBrJ,IAAIrD,EAAEJ,SACzCoB,MAAK,SAAChB,EAAGe,GAAJ,OAAUA,EAAEX,IAAMJ,EAAEI,OACxBwM,EAA6CN,EAAeO,SAEhEF,EAAarH,SAAQ,SAACtF,GAChByM,EAAWpJ,IAAIrD,EAAEkC,cAAgBuK,EAAWpJ,IAAIrD,EAAEmC,eAEpDyK,EAAeE,KAAK9M,GACpByM,EAAWjJ,OAAOxD,EAAEkC,aACpBuK,EAAWjJ,OAAOxD,EAAEmC,iBAIxB,IAAM4K,EAAsBxB,GAA0BqB,GACtD,MAAO,CACLvG,MAAO0G,EAAoB1G,MAC3BD,MAAM,GAAD,mBACA2G,EAAoB3G,OADpB,YAEArE,MAAMC,KAAKyK,GAAY,SAACzM,EAAGmB,GAAJ,MAAW,CACnCF,GAAI8L,EAAoB3G,MAAM4G,OAAS7L,EACvCvB,KAAMI,SAsBFiN,CAAavB,GAAiBK,GAAaO,GAE3BZ,GAAiBK,MACzC,IAIF,EAAqCvK,mBAAwB,MAA7D,mBAAO0L,EAAP,KAAoBC,EAApB,KACA,EAAqC3L,oBAAkB,GAAvD,mBAAO4L,EAAP,KAAoBC,EAApB,KAGA,EAAqC7L,oBAAS,GAA9C,mBAAO8L,EAAP,KAAoBC,EAApB,KACA,EAA2C/L,mBAEzC,IAFF,mBAAO8K,EAAP,KAAuBkB,EAAvB,KAIA,OACE,eAAC,GAAD,WACE,cAAC,GAAD,2BACMvB,GADN,IAEE1B,YAAa,SAAC3K,GACZuN,EAAcvN,GACdyN,GAAc,OAGlB,cAAC,GAAD,CACE1J,cAAekI,EACfjI,KAAMpD,KAAKsL,MAAMT,GAAUxE,MAAQ,IACnChD,IAAKrD,KAAKC,IAAID,KAAKsL,MAAMT,GAAU5E,OAAS4E,GAAUxE,MAAQ,GAAI,GAClEpG,IAAKD,KAAKsL,MAAMT,GAAU5E,OAAS4E,GAAUxE,OAC7C9D,SAAUgB,uBACR,SAAC3D,GACC4L,EAAa5L,GACbiM,EAAiBjM,EAAK+L,EAAqBG,KAG7C,CAACH,EAAqBG,MAG1B,cAAC,GAAD,CACE5J,QAASyJ,EACTpJ,SAAUgB,uBACR,SAACQ,GACC6H,EAAoB7H,GACpB8H,EAAiBN,EAAYxH,EAAG+H,KAGlC,CAACP,EAAYO,IAEfnB,qBAAsBpH,uBAAY,WAChCwJ,GAAc,KACb,MAEL,cAAC,GAAD,CACE3N,KAAMsN,GAA4B,GAClCvH,KAAMyH,EACNxH,QAAS,kBAAMyH,GAAc,MAE/B,eAACI,EAAA,EAAD,CACE5N,UAAU,SACVqB,QAAQ,aACRwM,OAAO,QACP/H,KAAM2H,EAJR,UAME,qBAAKzN,UAAU,gBAAf,SACE,cAACsD,EAAA,EAAD,CACEC,QAASW,uBAAY,WACnBwJ,GAAc,KACb,IAHL,SAKE,cAAC,IAAD,QAGJ,cAAC,GAAD,CACElM,UAAWqK,GAAiBK,GAAY1F,MACxC/E,oBAAqB2K,EAAe5F,MACpC9E,UAAWwC,uBACT,SAACrC,GACC8L,EAAiB9L,GACjB2K,EAAiBN,EAAYI,EAAqBzK,KAEpD,CAACqK,EAAYI,EAAqBE,aCvLxC3L,GAAOL,IAAOM,IAAV,+RAIG7C,EAAMK,GAAGC,KAAK,IACXN,EAAMC,OAAOR,KAETO,EAAMK,GAAGC,OACRN,EAAMK,GAAGI,gBAAmBT,EAAMK,GAAGI,gBAQrCT,EAAMK,GAAGC,KAAK,KAKpBuP,GAjDK,kBAClB,eAAC,GAAD,WACE,gCACE,eAACjP,EAAA,EAAD,CAAYkP,QAAQ,SAAS1M,QAAQ,KAArC,UACGxD,YAA4B,OAE/B,mBACEsB,KAAK,yCACLC,OAAO,SACPC,IAAI,sBAHN,+CAQF,mBAAGF,KAAK,sEAAR,gFACA,0CAEE,mBACEA,KAAK,gCACLC,OAAO,SACPC,IAAI,sBAHN,2BAhBJ,WAwBWxB,iBCJEmQ,GAhBI,WAMjB,OALA3E,qBAAU,WACR4E,IAAQC,WAAW,kBACnBD,IAAQE,SAASC,OAAOC,SAASC,SAAWF,OAAOC,SAASE,UAC3D,IAGD,eAAC,IAAD,CAAetQ,MAAOd,EAAtB,UACE,cAAC,IAAD,CAAQqR,OAAQzP,IAChB,cAAC,GAAD,IACA,cAAC,EAAD,IACA,cAAC,GAAD,QCTc0P,QACW,cAA7BL,OAAOC,SAASK,UAEe,UAA7BN,OAAOC,SAASK,UAEhBN,OAAOC,SAASK,SAASC,MACvB,2DCbNC,IAASC,OAAO,cAAC,GAAD,IAASC,SAASC,eAAe,SD8H3C,kBAAmBC,WACrBA,UAAUC,cAAcC,MAAMC,MAAK,SAAAC,GACjCA,EAAaC,iB","file":"static/js/main.59ff9edc.chunk.js","sourcesContent":["import { createTheme } from '@mui/material';\nimport { pink } from '@mui/material/colors';\n\nexport const muiTheme = createTheme({\n  palette: {\n    primary: {\n      main: pink[600],\n    },\n  },\n});\n\nexport const makePxScaleUtil =\n  (base: number) =>\n  (scale: number = 1): string =>\n    `${base * scale}px`;\n\nconst base_color = process.env.REACT_APP_BASE_COLOR;\nconst main_color = process.env.REACT_APP_MAIN_COLOR;\nconst accent_color = process.env.REACT_APP_ACCENT_COLOR;\n\nexport const colors = {\n  base: base_color ? base_color : '#f8f8f8',\n  main: main_color ? main_color : '#00a8cc',\n  accent: accent_color ? accent_color : '#fe346e',\n  border: '#ccc',\n  text: '#123',\n};\nexport const px = {\n  grid: makePxScaleUtil(20),\n  font_size: makePxScaleUtil(16),\n  max_width: makePxScaleUtil(900),\n  border_radius: makePxScaleUtil(3),\n};\n\nexport const theme = { colors, px };\n\nexport default theme;\n","import { css } from '@emotion/react';\nimport 'normalize.css';\nimport Typography from 'typography';\nimport theme from './theme';\nconst typographyTheme = require('typography-theme-github');\n\nconst typography = new Typography(typographyTheme);\n\ntypography.injectStyles();\n\nexport const global_style = css`\n  body {\n    color: ${theme.colors.text};\n    font-size: ${theme.px.font_size()};\n    background: ${theme.colors.base};\n    line-height: 1.7;\n\n    a {\n      color: #c6255a;\n\n      &:visited {\n        color: #5b001e;\n      }\n    }\n  }\n`;\n","import { FC } from 'react';\n\nexport const PixivDictLink: FC<{ title: string; text?: string }> = ({\n  title,\n  text,\n}) => (\n  <a\n    href={`https://dic.pixiv.net/a/${title}`}\n    target=\"_blank\"\n    rel=\"noopener noreferrer\"\n  >\n    {(text ? text : title).replace(/\\(.*\\)/, '')}\n  </a>\n);\n\nexport const PixivTagLink: FC<{ title: string; text?: string }> = ({\n  title,\n  text,\n}) => (\n  <a\n    href={`https://www.pixiv.net/tags/${title}`}\n    target=\"_blank\"\n    rel=\"noopener noreferrer\"\n  >\n    {(text ? text : title).replace(/\\(.*\\)/, '')}\n  </a>\n);\n","import styled from '@emotion/styled';\nimport { Typography } from '@mui/material';\nimport { FC } from 'react';\nimport { Coupling, Couplings } from 'yurigraph-scraping';\nimport coupling_json_import from '../couplings.json';\nimport theme from '../styles/theme';\nimport { PixivDictLink, PixivTagLink } from './pixiv-utils';\nconst coupling_json: Couplings = coupling_json_import;\n\ntype CouplingTag = {\n  characters: Coupling['characters'];\n  tag: Coupling['tags'][0];\n};\n\nconst CouplingListItem: FC<{ coupling: CouplingTag; rank: number }> = ({\n  coupling,\n  rank,\n}) => (\n  <StyledListItem rank={rank}>\n    <PixivTagLink title={coupling.tag.name} />\n    <span className=\"characters\">\n      {coupling.characters\n        .map((x) => (\n          <PixivDictLink\n            title={x.dict_entry ? x.dict_entry : x.name}\n            text={x.name}\n          />\n        ))\n        .reduce((s, x) => (\n          <>\n            {s} × {x}\n          </>\n        ))}\n    </span>\n    <span className=\"sideinfo\">({coupling.tag.num}作品)</span>\n  </StyledListItem>\n);\nconst StyledListItem = styled.li<{ rank: number }>`\n  font-size: ${(props) => Math.max(32 - props.rank / 2, 16)}px;\n\n  .characters {\n    display: inline-block;\n    margin-left: 1em;\n    font-size: 0.75em;\n\n    a {\n      opacity: 0.8;\n    }\n  }\n\n  .sideinfo {\n    display: inline-block;\n    margin-left: 1em;\n    font-size: 0.75em;\n  }\n`;\n\nexport const CouplingRanking: FC<{}> = () => {\n  const coupling_tags: CouplingTag[] = coupling_json\n    .map((x) => x.tags.map((y) => ({ characters: x.characters, tag: y })))\n    .reduce((s, x) => [...s, ...x])\n    .sort((x, y) => y.tag.num - x.tag.num);\n  return (\n    <Root>\n      <span>\n        <Typography id=\"カップリングランキング\" variant=\"h2\">\n          カップリングランキング\n        </Typography>\n        <ol>\n          {coupling_tags.map((x, i) => (\n            <CouplingListItem coupling={x} rank={i + 1} key={i} />\n          ))}\n        </ol>\n      </span>\n    </Root>\n  );\n};\nconst Root = styled.div`\n  display: flex;\n  align-items: center;\n  justify-content: center;\n  padding: ${theme.px.grid(2)} ${theme.px.grid()} 0 ${theme.px.grid(2)};\n  box-shadow: 0 0 ${theme.px.grid()} #0002;\n\n  h2 {\n    font-size: 1.5rem;\n  }\n\n  ol {\n    margin-top: 10px;\n  }\n`;\n\nexport default CouplingRanking;\n","import styled from '@emotion/styled';\nimport DeleteForeverIcon from '@mui/icons-material/DeleteForever';\nimport HelpOutlineIcon from '@mui/icons-material/HelpOutline';\nimport { Checkbox, FormControlLabel, IconButton, Tooltip } from '@mui/material';\nimport { FC, useMemo, useState } from 'react';\nimport theme from '../../styles/theme';\nimport { LinkDataOmitSourceTarget } from './types';\n\n// components\nexport const CouplingSelector: FC<{\n  all_links: LinkDataOmitSourceTarget[];\n  auto_selected_links: LinkDataOmitSourceTarget[];\n  onChanged: (selected_links: LinkDataOmitSourceTarget[]) => void;\n}> = ({ all_links, auto_selected_links, onChanged }) => {\n  const [selected_links, _setSelectedLinks] = useState<\n    Map<string, LinkDataOmitSourceTarget>\n  >(new Map());\n  const setSelectedLinks = (map: typeof selected_links) =>\n    _setSelectedLinks(new Map(map));\n  const selectedCharactors = new Set(\n    Array.from(selected_links.values())\n      .map((x) => [x.source_name, x.target_name])\n      .reduce((s, x) => [...s, ...x], [])\n  );\n\n  const auto_selected_names = useMemo(\n    () => new Set(auto_selected_links.map((x) => x.name)),\n    [auto_selected_links]\n  );\n  const sorted_all_links = useMemo(\n    () => all_links.sort((x, y) => y.num - x.num),\n    [all_links]\n  );\n\n  const [coupling_mode, setCouplingMode] = useState(true);\n\n  return (\n    <Root>\n      <p>優先したいカップリングを選択してください</p>\n      <details>\n        <summary>使い方</summary>\n        <ul className=\"legends\">\n          <li>\n            <Checkbox className=\"legend\" checked={false} />\n            ：選択できます．「1対1に解決」で採用されなかったカップリングです．\n          </li>\n          <li>\n            <Checkbox className=\"legend\" checked={true} />\n            ：選択しています\n          </li>\n          <li>\n            <Checkbox\n              className=\"legend\"\n              checked={false}\n              indeterminate={true}\n              disabled={true}\n            />\n            ：「1対1に解決」によって自動的に成立しているカップリングです\n          </li>\n          <li>\n            <Checkbox className=\"legend\" checked={false} disabled={true} />\n            ：「1対1にこだわる」によって選択できません．同じキャラクターを含む他のカップリングが選択済みです．\n          </li>\n        </ul>\n      </details>\n\n      <FormControlLabel\n        control={\n          <Checkbox\n            checked={coupling_mode}\n            onChange={(e) => setCouplingMode(e.target.checked)}\n            name=\"force_coupling\"\n          />\n        }\n        label={\n          <span>\n            1対1にこだわる\n            <Tooltip\n              title=\"同じキャラクターを含むカップリングを1つしか選択できなくします\"\n              className=\"tip\"\n            >\n              <HelpOutlineIcon />\n            </Tooltip>\n          </span>\n        }\n      />\n      <FormControlLabel\n        control={\n          <IconButton\n            onClick={() => {\n              setSelectedLinks(new Map());\n              onChanged([]);\n            }}\n          >\n            <DeleteForeverIcon />\n          </IconButton>\n        }\n        label={'設定をリセット'}\n      />\n      <ol>\n        {sorted_all_links.map((x) => (\n          <li key={x.name}>\n            <FormControlLabel\n              control={\n                <Checkbox\n                  name={`${x.name}を優先して解決`}\n                  checked={selected_links.has(x.name)}\n                  indeterminate={\n                    !selected_links.has(x.name) &&\n                    auto_selected_names.has(x.name)\n                  }\n                  disabled={\n                    !selected_links.has(x.name) &&\n                    ((coupling_mode &&\n                      (selectedCharactors.has(x.source_name) ||\n                        selectedCharactors.has(x.target_name))) ||\n                      auto_selected_names.has(x.name))\n                  }\n                  onChange={(e) => {\n                    let changed_map;\n                    if (e.target.checked) {\n                      changed_map = selected_links.set(x.name, x);\n                      setSelectedLinks(changed_map);\n                    } else {\n                      selected_links.delete(x.name);\n                      changed_map = selected_links;\n                      setSelectedLinks(selected_links);\n                    }\n\n                    onChanged(Array.from(changed_map.values()));\n                  }}\n                />\n              }\n              label={\n                <span>\n                  {x.name}\n                  <Tooltip\n                    title={`${x.source_name} × ${x.target_name} (${x.num}作品)`}\n                    className=\"tip\"\n                  >\n                    <HelpOutlineIcon />\n                  </Tooltip>\n                </span>\n              }\n            />\n          </li>\n        ))}\n      </ol>\n    </Root>\n  );\n};\nconst Root = styled.div`\n  min-width: 200px;\n  max-width: 30vw;\n\n  p {\n    margin: 0;\n  }\n\n  details {\n    margin-bottom: ${theme.px.grid()};\n  }\n\n  .legends {\n    li {\n      margin: 0;\n    }\n    .legend {\n      transform: scale(0.75);\n      padding: 0;\n    }\n  }\n\n  .tip {\n    font-size: 1rem;\n  }\n\n  ol {\n    margin: ${theme.px.grid()} 0 0 0;\n    list-style: none;\n  }\n`;\n\nexport default CouplingSelector;\n","import styled from '@emotion/styled';\nimport { Slider } from '@mui/material';\nimport { FC, useCallback } from 'react';\nimport theme from '../../styles/theme';\n\n// components\nexport const FilterNumSlider: FC<{\n  default_value: number;\n  step: number;\n  min: number;\n  max: number;\n  onChange: (num: number) => void;\n}> = ({ default_value, step, min, max, onChange }) => {\n  const getLabelText = useCallback((x) => `${x}作品以上`, []);\n  return (\n    <SliderRoot>\n      <Slider\n        defaultValue={default_value}\n        step={step}\n        min={min}\n        max={max}\n        valueLabelDisplay=\"auto\"\n        getAriaValueText={getLabelText}\n        valueLabelFormat={getLabelText}\n        onChangeCommitted={(_, v) => typeof v === 'number' && onChange(v)}\n        marks\n      />\n    </SliderRoot>\n  );\n};\nconst SliderRoot = styled.div`\n  position: absolute;\n  right: ${theme.px.grid(1.5)};\n  bottom: ${theme.px.grid(0.5)};\n  width: calc(100vw - ${theme.px.grid(2)} * 2);\n  max-width: ${theme.px.grid(20)};\n  z-index: 2;\n`;\n\nexport default FilterNumSlider;\n","import { FC } from 'react';\nimport { Character, Coupling, Couplings } from 'yurigraph-scraping';\nimport coupling_json from '../couplings.json';\nimport { PixivDictLink, PixivTagLink } from './pixiv-utils';\n\nconst friends = ((): { [name: string]: Coupling[] } => {\n  const couplings: Couplings = coupling_json;\n  const character_names: string[] = couplings\n    .map((x) => x.characters.map((x) => x.name))\n    .reduce((s, x) => [...s, ...x])\n    .filter((x, i, self) => self.indexOf(x) === i);\n  return character_names\n    .map((x) => ({\n      [x]: couplings.filter(\n        (y) => y.characters.find((z) => z.name === x) !== undefined\n      ),\n    }))\n    .reduce((s, x) => ({ ...s, ...x }));\n})();\n\n// components\nexport const FriendsInfo: FC<{ name: string; className?: string }> = ({\n  name,\n  className,\n}) => {\n  if (friends[name] === undefined) return null;\n\n  return (\n    <ol className={className}>\n      {friends[name]\n        .map((x) => ({\n          ...x,\n          num: x.tags.map((x) => x.num).reduce((s, x) => (s > x ? s : x)),\n        }))\n        .sort((x, y) => y.num - x.num)\n        .map((x) => {\n          const friend = x.characters.find((x) => x.name !== name) as Character;\n\n          return (\n            <li key={x.tags[0].name}>\n              {\n                <PixivDictLink\n                  title={friend.dict_entry ? friend.dict_entry : friend.name}\n                  text={friend.name}\n                  key={x.tags[0].name}\n                />\n              }\n              <ul>\n                {x.tags\n                  .sort((x, y) => y.num - x.num)\n                  .map((x) => (\n                    <li key={x.name}>\n                      <PixivTagLink title={x.name} />({x.num}作品)\n                    </li>\n                  ))}\n              </ul>\n            </li>\n          );\n        })}\n    </ol>\n  );\n};\n\nexport default FriendsInfo;\n","import styled from '@emotion/styled';\nimport CloseIcon from '@mui/icons-material/Close';\nimport { Dialog, DialogTitle, IconButton } from '@mui/material';\nimport { FC } from 'react';\nimport { Character, Couplings } from 'yurigraph-scraping';\nimport couplings_json_import from '../../couplings.json';\nimport theme from '../../styles/theme';\nimport FriendsInfo from '../FriendsInfo';\nimport { PixivDictLink } from '../pixiv-utils';\n\nconst couplings_json: Couplings = couplings_json_import;\nconst name2character: Map<string, Character> = new Map();\ncouplings_json.forEach((x) => {\n  x.characters.forEach((x) => name2character.set(x.name, x));\n});\n\nexport const FriendsDialog: FC<{\n  name: string;\n  open: boolean;\n  onClose: () => void;\n}> = ({ name, open, onClose }) => {\n  const character = name2character.get(name);\n  if (character === undefined) return null;\n\n  return (\n    <DialogRoot\n      onClose={() => onClose()}\n      aria-labelledby=\"friends-dialog-title\"\n      open={open}\n      fullWidth={true}\n    >\n      <DialogTitle id=\"friends-dialog-title\">\n        <span>\n          <PixivDictLink\n            title={character.dict_entry ? character.dict_entry : character.name}\n            text={character.name}\n          />\n          のカップリング一覧\n        </span>\n        <IconButton aria-label=\"close\" onClick={onClose}>\n          <CloseIcon />\n        </IconButton>\n      </DialogTitle>\n      <StyledFriendsInfo name={name} />\n    </DialogRoot>\n  );\n};\nconst StyledFriendsInfo = styled(FriendsInfo)`\n  margin-left: ${theme.px.grid(2.5)};\n`;\n\nconst DialogRoot = styled(Dialog)`\n  #friends-dialog-title > .MuiTypography-root {\n    display: flex;\n    align-items: center;\n    justify-content: space-between;\n  }\n`;\n\nexport default FriendsDialog;\n","import * as d3 from 'd3';\nimport { SimulationNodeDatum } from 'd3';\nimport stats from 'stats-lite';\nimport { ElementSelection, ForceSimulation, LinkData, NodeData } from './types';\n\nconst makeSigmoid = require('awesome-sigmoid').default;\n\nexport const getInitializedForce = (\n  nodes: NodeData[],\n  links: LinkData[],\n  options: {\n    classname: { node: string; link: string };\n    window_size: { width: number; height: number };\n    link_distance: number;\n  }\n): {\n  force_simulation: ForceSimulation;\n  registerGraph: (svg: Element) => void;\n} => {\n  const nums = links.map((x) => x.num);\n  const sigmoid = makeSigmoid({\n    center: stats.mean(nums),\n    deviation: stats.stdev(nums),\n    deviation_output: 0.9,\n  });\n\n  const force_simulation = d3\n    .forceSimulation(nodes as SimulationNodeDatum[])\n    .force('charge', d3.forceManyBody().strength(-300).distanceMax(300))\n    .force(\n      'link',\n      d3\n        .forceLink(links)\n        .distance((d) => options.link_distance * (2 - sigmoid(d.num)))\n        .strength(1)\n        .iterations(10)\n    )\n    .force(\n      'center',\n      d3\n        .forceCenter()\n        .x(options.window_size.width / 2)\n        .y(options.window_size.height / 2)\n    )\n    .force('collide', d3.forceCollide(10));\n\n  let graph: ElementSelection | null = null;\n  const registerGraph = (svg: Element) => {\n    graph = d3.select(svg);\n    force_simulation.on('tick', () => {\n      if (graph === null) return;\n      graph.call((selection) => {\n        selection\n          .selectAll('.' + options.classname.node)\n          .call((selection) =>\n            selection.attr(\n              'transform',\n              (d: any) =>\n                d !== undefined && 'translate(' + d.x + ',' + d.y + ')'\n            )\n          );\n        selection\n          .selectAll('.' + options.classname.link)\n          .call((selection) =>\n            selection.attr('d', (d: any) =>\n              d !== undefined\n                ? `M ${d.source.x},${d.source.y} L ${d.target.x},${d.target.y}`\n                : ''\n            )\n          );\n      });\n    });\n  };\n\n  return { force_simulation, registerGraph };\n};\n\nexport default getInitializedForce;\n","import styled from '@emotion/styled';\nimport * as d3 from 'd3';\nimport mixColor from 'mix-color';\nimport { FC, useEffect, useRef } from 'react';\nimport theme from '../../styles/theme';\nimport { LinkData } from './types';\n\nexport const Link: FC<{\n  data: LinkData;\n  weight: number;\n  active: boolean;\n  detail: boolean;\n}> = ({ data, weight, active, detail }) => {\n  const line = useRef(null);\n  useEffect(() => {\n    if (line.current === null) return;\n    const root = d3.select(line.current);\n    root.datum(data);\n    return () => {\n      root.datum();\n    };\n  });\n\n  const id = `deregraph-link-${data.id}`;\n\n  return (\n    <>\n      <StyledPath\n        id={id}\n        className=\"link\"\n        weight={weight}\n        active={active}\n        ref={line}\n      ></StyledPath>\n      {detail ? (\n        <StyledLabel y=\"-3\">\n          <textPath href={`#${id}`} startOffset=\"50%\">\n            {data.name}\n          </textPath>\n        </StyledLabel>\n      ) : null}\n    </>\n  );\n};\nconst StyledPath = styled.path<{ weight: number; active: boolean }>`\n  stroke: ${({ weight }) =>\n    mixColor(theme.colors.main, theme.colors.accent, weight)};\n  stroke-width: ${({ weight }) => weight * 7 + 3}px;\n  opacity: ${({ active }) => (active ? 1 : 0.3)};\n  stroke-linecap: round;\n`;\n\nconst StyledLabel = styled.text`\n  fill: #000;\n  text-anchor: middle;\n  font-size: 12px;\n`;\n\nexport default Link;\n","import styled from '@emotion/styled';\nimport * as d3 from 'd3';\nimport { FC, useEffect, useRef } from 'react';\nimport theme from '../../styles/theme';\nimport { ForceSimulation, NodeData } from './types';\n\nexport const Node: FC<{\n  data: NodeData;\n  force_simulation: ForceSimulation;\n  active: boolean;\n  onClick?: (name: string) => void;\n  onFocusName?: (name: string | null) => void;\n}> = ({ data, force_simulation, active, onFocusName, onClick }) => {\n  const root_element = useRef<SVGCircleElement | null>(null);\n\n  //append d3 data\n  useEffect(() => {\n    if (root_element.current === null) return;\n    const root = d3.select(root_element.current);\n    root.datum(data);\n\n    return () => {\n      root.datum();\n    };\n  });\n\n  //drag event\n  useEffect(() => {\n    if (root_element.current === null) return;\n    d3.select(root_element.current as Element).call(\n      d3\n        .drag()\n        .on('start', (_, d: any) => {\n          force_simulation.alphaTarget(0.1).restart();\n          d.fx = d.x;\n          d.fy = d.y;\n        })\n        .on('drag', (event: any, d: any) => {\n          d.fx = event.x;\n          d.fy = event.y;\n        })\n        .on('end', (_, d: any) => {\n          force_simulation.alphaTarget(0).restart();\n          d.fx = null;\n          d.fy = null;\n        })\n    );\n  });\n\n  return (\n    <StyledRoot\n      className=\"node\"\n      active={active}\n      onMouseEnter={() => {\n        onFocusName && onFocusName(data.name);\n      }}\n      onMouseLeave={() => {\n        onFocusName && onFocusName(null);\n      }}\n      onClick={() => {\n        onClick && onClick(data.name);\n      }}\n      ref={root_element}\n    >\n      <circle r={14} />\n      <text y={6}>{data.name.replace(/\\(.*\\)/, '')}</text>\n    </StyledRoot>\n  );\n};\nconst StyledRoot = styled.g<{ active: boolean }>`\n  cursor: pointer;\n  opacity: ${(props) => (props.active ? 1 : 0.3)};\n  &:active {\n    cursor: grabbing;\n  }\n\n  circle {\n    fill: #fff;\n    stroke: #0001;\n    stroke-width: 7px;\n    opacity: ${(props) => (props.active ? 1 : 0)};\n  }\n\n  text {\n    fill: ${theme.colors.text}c;\n    stroke: #fff7;\n    stroke-width: 7px;\n    paint-order: stroke;\n    font-size: ${theme.px.font_size()};\n    font-family: sans;\n    stroke-linejoin: round;\n  }\n\n  &:hover {\n    circle {\n      fill: ${theme.colors.accent};\n    }\n  }\n`;\n\nexport default Node;\n","import styled from '@emotion/styled';\nimport { useWindowSize } from '@react-hook/window-size';\nimport makeSigmoid from 'awesome-sigmoid';\nimport * as d3 from 'd3';\nimport mixColor from 'mix-color';\nimport { FC, useEffect, useMemo, useRef, useState } from 'react';\nimport stats from 'stats-lite';\nimport theme from '../../styles/theme';\nimport getInitializedForce from './forceSimulation';\nimport Link from './Link';\nimport Node from './Node';\nimport { LinkData, NodeData } from './types';\n\nexport const Graph: FC<{\n  nodes: NodeData[];\n  links: LinkData[];\n  onNodeClick?: (name: string) => void;\n}> = ({ nodes, links, onNodeClick }) => {\n  //setup sigmoid\n  const nums = links.map((x) => x.num);\n  const sigmoid = makeSigmoid({\n    center: stats.mean(nums),\n    deviation: stats.stdev(nums),\n    deviation_output: 0.9,\n  });\n\n  //setup force simulation\n  const [width, height] = useWindowSize();\n  const force = useMemo(\n    () =>\n      getInitializedForce(nodes, links, {\n        classname: { node: 'node', link: 'link' },\n        window_size: { width, height },\n        link_distance: 100,\n      }),\n    [nodes, links, width, height]\n  );\n  const svg = useRef<SVGSVGElement | null>(null);\n  useEffect(() => {\n    if (svg.current === null) return;\n    force.registerGraph(svg.current);\n  });\n\n  //move and zoom handler\n  const graph_position = useRef<{ x: number; y: number }>({ x: 0, y: 0 });\n  const root_group = useRef<SVGGElement | null>(null);\n  useEffect(() => {\n    if (svg.current === null) return;\n    d3.select(svg.current as Element).call(\n      d3\n        .drag()\n        .subject(() => {\n          if (root_group.current === null) return;\n          return { x: graph_position.current.x, y: graph_position.current.y };\n        })\n        .on('drag', (event: any) => {\n          if (root_group.current === null) return;\n          root_group.current.style.transform = `translate(${event.x}px, ${event.y}px)`;\n          graph_position.current = { x: event.x, y: event.y };\n        })\n    );\n  }, []);\n\n  //focus node\n  const [focus_name, setFocusName] = useState<string | null>(null);\n  const friends: { [name: string]: string[] } = nodes\n    .map((x) => x.name)\n    .map((x) => ({\n      [x]: links\n        .map((y) =>\n          y.source_name === x\n            ? y.target_name\n            : y.target_name === x\n            ? y.source_name\n            : null\n        )\n        .filter<string>((x): x is string => typeof x === 'string'),\n    }))\n    .reduce((s, x) => ({ ...s, ...x }));\n\n  //components\n  const link_components = links.map((x) => {\n    const detail = x.source_name === focus_name || x.target_name === focus_name;\n    return (\n      <Link\n        data={x}\n        weight={sigmoid(x.num)}\n        active={focus_name === null || detail}\n        detail={detail}\n        key={x.name}\n      />\n    );\n  });\n\n  const node_components = nodes.map((x) => (\n    <Node\n      data={x}\n      force_simulation={force.force_simulation}\n      active={\n        focus_name === null ||\n        focus_name === x.name ||\n        friends[focus_name].indexOf(x.name) !== -1\n      }\n      onFocusName={setFocusName}\n      onClick={onNodeClick}\n      key={x.name}\n    />\n  ));\n\n  return (\n    <GraphRoot ref={svg}>\n      <g ref={root_group}>\n        {link_components}\n        {node_components}\n      </g>\n    </GraphRoot>\n  );\n};\nconst GraphRoot = styled.svg`\n  display: block;\n  width: 100%;\n  height: 100vh;\n  background: linear-gradient(\n    0.1turn,\n    ${mixColor('#fff', theme.colors.main, 0.1)} 30%,\n    ${mixColor('#fff', theme.colors.accent, 0.1)}\n  );\n  cursor: grab;\n  &:active {\n    cursor: grabbing;\n  }\n\n  .link,\n  .node,\n  .node > * {\n    transition: fill ease 0.5s, opacity ease 0.5s;\n  }\n`;\n\nexport default Graph;\n","import styled from '@emotion/styled';\nimport SettingsIcon from '@mui/icons-material/Settings';\nimport { Checkbox, FormControlLabel, IconButton } from '@mui/material';\nimport { FC } from 'react';\nimport theme from '../../styles/theme';\n\n// components\nexport const MakeCouplingSettings: FC<{\n  checked: boolean;\n  onChange: (val: boolean) => void;\n  onClickSettingButton: () => void;\n}> = ({ checked, onChange, onClickSettingButton }) => {\n  return (\n    <Root>\n      <FormControlLabel\n        control={\n          <Checkbox\n            checked={checked}\n            onChange={(e) => onChange(e.target.checked)}\n            name=\"resolve_one_to_many\"\n          />\n        }\n        label=\"1対1に解決\"\n      />\n      <IconButton\n        disabled={!checked}\n        aria-label=\"close\"\n        onClick={onClickSettingButton}\n      >\n        <SettingsIcon />\n      </IconButton>\n    </Root>\n  );\n};\nconst Root = styled.div`\n  position: absolute;\n  right: 0;\n  bottom: ${theme.px.grid(3)};\n  padding: 0 ${theme.px.grid(0.5)} 0 0;\n  background: ${theme.colors.base};\n  box-shadow: 0 0 ${theme.px.grid()} #0002;\n  border-radius: ${theme.px.border_radius()} 0 0 ${theme.px.border_radius()};\n  z-index: 1;\n\n  label {\n    margin: 0;\n    padding: 0 ${theme.px.grid(0.5)} 0 0;\n  }\n`;\n\nexport default MakeCouplingSettings;\n","import styled from '@emotion/styled';\nimport ChevronRightIcon from '@mui/icons-material/ChevronRight';\nimport { Drawer, IconButton } from '@mui/material';\nimport { FC, useCallback, useState } from 'react';\nimport stats from 'stats-lite';\nimport { Couplings } from 'yurigraph-scraping';\nimport couplings_json_import from '../../couplings.json';\nimport theme from '../../styles/theme';\nimport CouplingSelector from './CouplingSelector';\nimport FilterNumSlider from './FilterNumSlider';\nimport FriendsDialog from './FriendsDialog';\nimport Graph from './Graph';\nimport MakeCouplingSettings from './MakeCouplingSettings';\nimport { LinkData, LinkDataOmitSourceTarget, NodeData } from './types';\n\nconst deepCopy = require('deep-copy');\n\nconst couplings_json: Couplings = couplings_json_import;\n\n//utils\nconst nums = couplings_json\n  .map((x) => x.tags.map((x) => x.num))\n  .reduce((s, x) => [...s, ...x]);\nconst num_stats = {\n  max: nums.reduce((s, x) => (s > x ? s : x)),\n  min: nums.reduce((s, x) => (s < x ? s : x)),\n  center: parseInt(process.env.REACT_APP_DEFAULT_FILTER_VALUE as string),\n  stdev: stats.stdev(nums),\n};\n\ntype NodesAndLinks = { nodes: NodeData[]; links: LinkData[] };\nconst getNodesAndLinksFromLinks = (\n  base_links: LinkDataOmitSourceTarget[]\n): NodesAndLinks => {\n  const nodes: NodeData[] = base_links\n    .map((x) => [x.source_name, x.target_name])\n    .reduce((s, x) => [...s, ...x])\n    .filter((x, i, self) => self.indexOf(x) === i)\n    .map((x, i) => ({ id: i, name: x }));\n  const node_name2id: { [key: string]: number } = nodes\n    .map((x) => ({ [x.name]: x.id }))\n    .reduce((s, x) => ({ ...s, ...x }));\n\n  const links: LinkData[] = base_links.map((x) => ({\n    ...x,\n    source: node_name2id[x.source_name],\n    target: node_name2id[x.target_name],\n  }));\n\n  return deepCopy({ links, nodes });\n};\n\nconst initGetNodesAndLinks = (): ((num_filter: number) => NodesAndLinks) => {\n  const couplings = couplings_json;\n\n  const all_links: LinkDataOmitSourceTarget[] = couplings\n    .map((x) => ({\n      ...x,\n      tag: x.tags.reduce((s, x) => (s.num > x.num ? s : x)),\n    }))\n    .map((x, i) => ({\n      ...x.tag,\n      id: i,\n      source_name: x.characters[0].name,\n      target_name: x.characters[1].name,\n    }));\n\n  return (num_filter: number): NodesAndLinks => {\n    return getNodesAndLinksFromLinks(\n      all_links.filter((x) => x.num >= num_filter)\n    );\n  };\n};\nconst getNodesAndLinks = initGetNodesAndLinks();\n\nconst makeCoupling = (\n  nodes_and_links: NodesAndLinks,\n  reserved_links: LinkDataOmitSourceTarget[]\n): NodesAndLinks => {\n  const reserved_charactors: Set<string> = new Set(\n    reserved_links\n      .map((x) => [x.source_name, x.target_name])\n      .reduce((s, x) => [...s, ...x], [])\n  );\n  const charactors: Set<string> = new Set(\n    nodes_and_links.nodes\n      .map((x) => x.name)\n      .filter((x) => !reserved_charactors.has(x))\n  );\n  const reserved_link_names: Set<string> = new Set(\n    reserved_links.map((x) => x.name)\n  );\n  let sorted_links: LinkData[] = nodes_and_links.links\n    .filter((x) => !reserved_link_names.has(x.name))\n    .sort((x, y) => y.num - x.num);\n  let resolved_links: LinkDataOmitSourceTarget[] = reserved_links.concat();\n\n  sorted_links.forEach((x) => {\n    if (charactors.has(x.source_name) && charactors.has(x.target_name)) {\n      // resolve link\n      resolved_links.push(x);\n      charactors.delete(x.source_name);\n      charactors.delete(x.target_name);\n    }\n  });\n\n  const new_nodes_and_links = getNodesAndLinksFromLinks(resolved_links);\n  return {\n    links: new_nodes_and_links.links,\n    nodes: [\n      ...new_nodes_and_links.nodes,\n      ...Array.from(charactors, (x, i) => ({\n        id: new_nodes_and_links.nodes.length + i,\n        name: x,\n      })),\n    ],\n  };\n};\n\n// components\nexport const GraphRoot: FC<{}> = () => {\n  const default_filter_num = Math.floor(num_stats.center);\n  const [filter_num, setFilterNum] = useState(default_filter_num);\n  const [node_and_links, _setNodesAndLinks] = useState(\n    getNodesAndLinks(Math.floor(filter_num))\n  );\n  const [resolve_one_to_many, setResolveOneToMany] = useState(false);\n  const setNodesAndLinks = useCallback(\n    (\n      filter_num: number,\n      resolve_one_to_many: boolean,\n      reserved_links: LinkDataOmitSourceTarget[]\n    ) =>\n      resolve_one_to_many\n        ? _setNodesAndLinks(\n            makeCoupling(getNodesAndLinks(filter_num), reserved_links)\n          )\n        : _setNodesAndLinks(getNodesAndLinks(filter_num)),\n    []\n  );\n\n  // dialog\n  const [dialog_name, setDialogName] = useState<string | null>(null);\n  const [dialog_open, setDialogOpen] = useState<boolean>(false);\n\n  // drawer\n  const [drawer_open, setDrawerOpen] = useState(false);\n  const [reserved_links, setReservedLinks] = useState<\n    LinkDataOmitSourceTarget[]\n  >([]);\n\n  return (\n    <Root>\n      <Graph\n        {...node_and_links}\n        onNodeClick={(name) => {\n          setDialogName(name);\n          setDialogOpen(true);\n        }}\n      />\n      <FilterNumSlider\n        default_value={default_filter_num}\n        step={Math.floor(num_stats.stdev / 12)}\n        min={Math.max(Math.floor(num_stats.center - num_stats.stdev / 3), 0)}\n        max={Math.floor(num_stats.center + num_stats.stdev)}\n        onChange={useCallback(\n          (num) => {\n            setFilterNum(num);\n            setNodesAndLinks(num, resolve_one_to_many, reserved_links);\n          },\n          // eslint-disable-next-line react-hooks/exhaustive-deps\n          [resolve_one_to_many, reserved_links]\n        )}\n      />\n      <MakeCouplingSettings\n        checked={resolve_one_to_many}\n        onChange={useCallback(\n          (v) => {\n            setResolveOneToMany(v);\n            setNodesAndLinks(filter_num, v, reserved_links);\n          },\n          // eslint-disable-next-line react-hooks/exhaustive-deps\n          [filter_num, reserved_links]\n        )}\n        onClickSettingButton={useCallback(() => {\n          setDrawerOpen(true);\n        }, [])}\n      />\n      <FriendsDialog\n        name={dialog_name ? dialog_name : ''}\n        open={dialog_open}\n        onClose={() => setDialogOpen(false)}\n      />\n      <Drawer\n        className=\"drawer\"\n        variant=\"persistent\"\n        anchor=\"right\"\n        open={drawer_open}\n      >\n        <div className=\"drawer-header\">\n          <IconButton\n            onClick={useCallback(() => {\n              setDrawerOpen(false);\n            }, [])}\n          >\n            <ChevronRightIcon />\n          </IconButton>\n        </div>\n        <CouplingSelector\n          all_links={getNodesAndLinks(filter_num).links}\n          auto_selected_links={node_and_links.links}\n          onChanged={useCallback(\n            (selected_links) => {\n              setReservedLinks(selected_links);\n              setNodesAndLinks(filter_num, resolve_one_to_many, selected_links);\n            },\n            [filter_num, resolve_one_to_many, setNodesAndLinks]\n          )}\n        />\n      </Drawer>\n    </Root>\n  );\n};\n\nconst Root = styled.div`\n  .drawer .MuiPaper-root {\n    padding: ${theme.px.grid()};\n    background: ${theme.colors.base};\n    box-shadow: 0 0 ${theme.px.grid()} #0002;\n    overscroll-behavior: contain;\n\n    .drawer-header {\n      display: block;\n      padding-bottom: ${theme.px.grid()};\n    }\n  }\n`;\n\nexport default GraphRoot;\n","import styled from '@emotion/styled';\nimport { Typography } from '@mui/material';\nimport theme from '../styles/theme';\n\n// components\nexport const Menu = () => (\n  <Root>\n    <div>\n      <Typography display=\"inline\" variant=\"h1\">\n        {process.env.REACT_APP_NAME}{' '}\n      </Typography>\n      <a\n        href=\"https://github.com/sititou70/yurigraph\"\n        target=\"_blank\"\n        rel=\"noopener noreferrer\"\n      >\n        リポジトリ\n      </a>\n    </div>\n    <a href=\"#カップリングランキング\">カップリングランキング</a>\n    <div>\n      author:\n      <a\n        href=\"https://twitter.com/sititou70\"\n        target=\"_blank\"\n        rel=\"noopener noreferrer\"\n      >\n        @sititou70\n      </a>\n    </div>\n    update: {process.env['REACT_APP_BUILD_DATE']}\n  </Root>\n);\nconst Root = styled.div`\n  position: absolute;\n  top: 0;\n  left: 0;\n  padding: ${theme.px.grid(0.5)};\n  background: ${theme.colors.base};\n  font-size: 0.8rem;\n  box-shadow: 0 0 ${theme.px.grid()} #0002;\n  border-radius: 0 ${theme.px.border_radius()} ${theme.px.border_radius()};\n\n  h1 {\n    font-size: 1rem;\n  }\n\n  div {\n    a {\n      margin-left: ${theme.px.grid(0.5)};\n    }\n  }\n`;\n\nexport default Menu;\n","import { Global, ThemeProvider } from '@emotion/react';\nimport { useEffect } from 'react';\nimport ReactGA from 'react-ga';\nimport { global_style } from '../styles/GlobalStyle';\nimport { muiTheme } from '../styles/theme';\nimport CouplingRanking from './CouplingRanking';\nimport GraphRoot from './graph';\nimport Menu from './Menu';\n\n// components\nexport const App = () => {\n  useEffect(() => {\n    ReactGA.initialize('UA-158683797-1');\n    ReactGA.pageview(window.location.pathname + window.location.search);\n  }, []);\n\n  return (\n    <ThemeProvider theme={muiTheme}>\n      <Global styles={global_style} />\n      <GraphRoot />\n      <CouplingRanking />\n      <Menu />\n    </ThemeProvider>\n  );\n};\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' }\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import ReactDOM from 'react-dom';\nimport App from './components/App';\nimport * as serviceWorker from './serviceWorker';\nimport './styles/GlobalStyle';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}